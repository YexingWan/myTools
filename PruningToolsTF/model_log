Operation:
	
input_1:
name: "input_1"
op: "Placeholder"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: -1
      }
      dim {
        size: 224
      }
      dim {
        size: 224
      }
      dim {
        size: 3
      }
    }
  }
}

----------------------------------------------------------

	
sequential_1/conv2d/kernel/Initializer/random_uniform/shape:
name: "sequential_1/conv2d/kernel/Initializer/random_uniform/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_1/conv2d/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000 \000\000\000"
    }
  }
}

----------------------------------------------------------

	
sequential_1/conv2d/kernel/Initializer/random_uniform/min:
name: "sequential_1/conv2d/kernel/Initializer/random_uniform/min"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_1/conv2d/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: -0.1380131095647812
    }
  }
}

----------------------------------------------------------

	
sequential_1/conv2d/kernel/Initializer/random_uniform/max:
name: "sequential_1/conv2d/kernel/Initializer/random_uniform/max"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_1/conv2d/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.1380131095647812
    }
  }
}

----------------------------------------------------------

	
sequential_1/conv2d/kernel/Initializer/random_uniform/RandomUniform:
name: "sequential_1/conv2d/kernel/Initializer/random_uniform/RandomUniform"
op: "RandomUniform"
input: "sequential_1/conv2d/kernel/Initializer/random_uniform/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_1/conv2d/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

----------------------------------------------------------

	
sequential_1/conv2d/kernel/Initializer/random_uniform/sub:
name: "sequential_1/conv2d/kernel/Initializer/random_uniform/sub"
op: "Sub"
input: "sequential_1/conv2d/kernel/Initializer/random_uniform/max"
input: "sequential_1/conv2d/kernel/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_1/conv2d/kernel"
    }
  }
}

----------------------------------------------------------

	
sequential_1/conv2d/kernel/Initializer/random_uniform/mul:
name: "sequential_1/conv2d/kernel/Initializer/random_uniform/mul"
op: "Mul"
input: "sequential_1/conv2d/kernel/Initializer/random_uniform/RandomUniform"
input: "sequential_1/conv2d/kernel/Initializer/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_1/conv2d/kernel"
    }
  }
}

----------------------------------------------------------

	
sequential_1/conv2d/kernel/Initializer/random_uniform:
name: "sequential_1/conv2d/kernel/Initializer/random_uniform"
op: "Add"
input: "sequential_1/conv2d/kernel/Initializer/random_uniform/mul"
input: "sequential_1/conv2d/kernel/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_1/conv2d/kernel"
    }
  }
}

----------------------------------------------------------

	
sequential_1/conv2d/kernel:
name: "sequential_1/conv2d/kernel"
op: "VarHandleOp"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_1/conv2d/kernel"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 32
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: "sequential_1/conv2d/kernel"
  }
}

----------------------------------------------------------

	
sequential_1/conv2d/kernel/IsInitialized/VarIsInitializedOp:
name: "sequential_1/conv2d/kernel/IsInitialized/VarIsInitializedOp"
op: "VarIsInitializedOp"
input: "sequential_1/conv2d/kernel"

----------------------------------------------------------

	
sequential_1/conv2d/kernel/Assign:
name: "sequential_1/conv2d/kernel/Assign"
op: "AssignVariableOp"
input: "sequential_1/conv2d/kernel"
input: "sequential_1/conv2d/kernel/Initializer/random_uniform"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_1/conv2d/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_1/conv2d/kernel/Read/ReadVariableOp:
name: "sequential_1/conv2d/kernel/Read/ReadVariableOp"
op: "ReadVariableOp"
input: "sequential_1/conv2d/kernel"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_1/conv2d/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_1/conv2d/bias/Initializer/zeros:
name: "sequential_1/conv2d/bias/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_1/conv2d/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 32
        }
      }
      float_val: 0.0
    }
  }
}

----------------------------------------------------------

	
sequential_1/conv2d/bias:
name: "sequential_1/conv2d/bias"
op: "VarHandleOp"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_1/conv2d/bias"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 32
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: "sequential_1/conv2d/bias"
  }
}

----------------------------------------------------------

	
sequential_1/conv2d/bias/IsInitialized/VarIsInitializedOp:
name: "sequential_1/conv2d/bias/IsInitialized/VarIsInitializedOp"
op: "VarIsInitializedOp"
input: "sequential_1/conv2d/bias"

----------------------------------------------------------

	
sequential_1/conv2d/bias/Assign:
name: "sequential_1/conv2d/bias/Assign"
op: "AssignVariableOp"
input: "sequential_1/conv2d/bias"
input: "sequential_1/conv2d/bias/Initializer/zeros"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_1/conv2d/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_1/conv2d/bias/Read/ReadVariableOp:
name: "sequential_1/conv2d/bias/Read/ReadVariableOp"
op: "ReadVariableOp"
input: "sequential_1/conv2d/bias"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_1/conv2d/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_1/conv2d/dilation_rate:
name: "sequential_1/conv2d/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}

----------------------------------------------------------

	
sequential_1/batch_normalization/gamma/Initializer/ones:
name: "sequential_1/batch_normalization/gamma/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_1/batch_normalization/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 32
        }
      }
      float_val: 1.0
    }
  }
}

----------------------------------------------------------

	
sequential_1/batch_normalization/gamma:
name: "sequential_1/batch_normalization/gamma"
op: "VarHandleOp"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_1/batch_normalization/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 32
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: "sequential_1/batch_normalization/gamma"
  }
}

----------------------------------------------------------

	
sequential_1/batch_normalization/gamma/IsInitialized/VarIsInitializedOp:
name: "sequential_1/batch_normalization/gamma/IsInitialized/VarIsInitializedOp"
op: "VarIsInitializedOp"
input: "sequential_1/batch_normalization/gamma"

----------------------------------------------------------

	
sequential_1/batch_normalization/gamma/Assign:
name: "sequential_1/batch_normalization/gamma/Assign"
op: "AssignVariableOp"
input: "sequential_1/batch_normalization/gamma"
input: "sequential_1/batch_normalization/gamma/Initializer/ones"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_1/batch_normalization/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_1/batch_normalization/gamma/Read/ReadVariableOp:
name: "sequential_1/batch_normalization/gamma/Read/ReadVariableOp"
op: "ReadVariableOp"
input: "sequential_1/batch_normalization/gamma"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_1/batch_normalization/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_1/batch_normalization/beta/Initializer/zeros:
name: "sequential_1/batch_normalization/beta/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_1/batch_normalization/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 32
        }
      }
      float_val: 0.0
    }
  }
}

----------------------------------------------------------

	
sequential_1/batch_normalization/beta:
name: "sequential_1/batch_normalization/beta"
op: "VarHandleOp"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_1/batch_normalization/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 32
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: "sequential_1/batch_normalization/beta"
  }
}

----------------------------------------------------------

	
sequential_1/batch_normalization/beta/IsInitialized/VarIsInitializedOp:
name: "sequential_1/batch_normalization/beta/IsInitialized/VarIsInitializedOp"
op: "VarIsInitializedOp"
input: "sequential_1/batch_normalization/beta"

----------------------------------------------------------

	
sequential_1/batch_normalization/beta/Assign:
name: "sequential_1/batch_normalization/beta/Assign"
op: "AssignVariableOp"
input: "sequential_1/batch_normalization/beta"
input: "sequential_1/batch_normalization/beta/Initializer/zeros"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_1/batch_normalization/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_1/batch_normalization/beta/Read/ReadVariableOp:
name: "sequential_1/batch_normalization/beta/Read/ReadVariableOp"
op: "ReadVariableOp"
input: "sequential_1/batch_normalization/beta"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_1/batch_normalization/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_1/batch_normalization/moving_mean/Initializer/zeros:
name: "sequential_1/batch_normalization/moving_mean/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_1/batch_normalization/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 32
        }
      }
      float_val: 0.0
    }
  }
}

----------------------------------------------------------

	
sequential_1/batch_normalization/moving_mean:
name: "sequential_1/batch_normalization/moving_mean"
op: "VarHandleOp"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_1/batch_normalization/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 32
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: "sequential_1/batch_normalization/moving_mean"
  }
}

----------------------------------------------------------

	
sequential_1/batch_normalization/moving_mean/IsInitialized/VarIsInitializedOp:
name: "sequential_1/batch_normalization/moving_mean/IsInitialized/VarIsInitializedOp"
op: "VarIsInitializedOp"
input: "sequential_1/batch_normalization/moving_mean"

----------------------------------------------------------

	
sequential_1/batch_normalization/moving_mean/Assign:
name: "sequential_1/batch_normalization/moving_mean/Assign"
op: "AssignVariableOp"
input: "sequential_1/batch_normalization/moving_mean"
input: "sequential_1/batch_normalization/moving_mean/Initializer/zeros"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_1/batch_normalization/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_1/batch_normalization/moving_mean/Read/ReadVariableOp:
name: "sequential_1/batch_normalization/moving_mean/Read/ReadVariableOp"
op: "ReadVariableOp"
input: "sequential_1/batch_normalization/moving_mean"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_1/batch_normalization/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_1/batch_normalization/moving_variance/Initializer/ones:
name: "sequential_1/batch_normalization/moving_variance/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_1/batch_normalization/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 32
        }
      }
      float_val: 1.0
    }
  }
}

----------------------------------------------------------

	
sequential_1/batch_normalization/moving_variance:
name: "sequential_1/batch_normalization/moving_variance"
op: "VarHandleOp"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_1/batch_normalization/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 32
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: "sequential_1/batch_normalization/moving_variance"
  }
}

----------------------------------------------------------

	
sequential_1/batch_normalization/moving_variance/IsInitialized/VarIsInitializedOp:
name: "sequential_1/batch_normalization/moving_variance/IsInitialized/VarIsInitializedOp"
op: "VarIsInitializedOp"
input: "sequential_1/batch_normalization/moving_variance"

----------------------------------------------------------

	
sequential_1/batch_normalization/moving_variance/Assign:
name: "sequential_1/batch_normalization/moving_variance/Assign"
op: "AssignVariableOp"
input: "sequential_1/batch_normalization/moving_variance"
input: "sequential_1/batch_normalization/moving_variance/Initializer/ones"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_1/batch_normalization/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_1/batch_normalization/moving_variance/Read/ReadVariableOp:
name: "sequential_1/batch_normalization/moving_variance/Read/ReadVariableOp"
op: "ReadVariableOp"
input: "sequential_1/batch_normalization/moving_variance"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_1/batch_normalization/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_1/Conv2D_1/ReadVariableOp:
name: "sequential_1/Conv2D_1/ReadVariableOp"
op: "ReadVariableOp"
input: "sequential_1/conv2d/kernel"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_1/Conv2D_1:
name: "sequential_1/Conv2D_1"
op: "Conv2D"
input: "input_1"
input: "sequential_1/Conv2D_1/ReadVariableOp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

----------------------------------------------------------

	
sequential_1/BiasAdd/ReadVariableOp:
name: "sequential_1/BiasAdd/ReadVariableOp"
op: "ReadVariableOp"
input: "sequential_1/conv2d/bias"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_1/BiasAdd:
name: "sequential_1/BiasAdd"
op: "BiasAdd"
input: "sequential_1/Conv2D_1"
input: "sequential_1/BiasAdd/ReadVariableOp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

----------------------------------------------------------

	
sequential_1/keras_learning_phase/input:
name: "sequential_1/keras_learning_phase/input"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_BOOL
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_BOOL
      tensor_shape {
      }
      bool_val: false
    }
  }
}

----------------------------------------------------------

	
sequential_1/keras_learning_phase:
name: "sequential_1/keras_learning_phase"
op: "PlaceholderWithDefault"
input: "sequential_1/keras_learning_phase/input"
attr {
  key: "dtype"
  value {
    type: DT_BOOL
  }
}
attr {
  key: "shape"
  value {
    shape {
    }
  }
}

----------------------------------------------------------

	
sequential_1/cond/Switch:
name: "sequential_1/cond/Switch"
op: "Switch"
input: "sequential_1/keras_learning_phase"
input: "sequential_1/keras_learning_phase"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}

----------------------------------------------------------

	
sequential_1/cond/switch_t:
name: "sequential_1/cond/switch_t"
op: "Identity"
input: "sequential_1/cond/Switch:1"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}

----------------------------------------------------------

	
sequential_1/cond/switch_f:
name: "sequential_1/cond/switch_f"
op: "Identity"
input: "sequential_1/cond/Switch"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}

----------------------------------------------------------

	
sequential_1/cond/pred_id:
name: "sequential_1/cond/pred_id"
op: "Identity"
input: "sequential_1/keras_learning_phase"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}

----------------------------------------------------------

	
sequential_1/cond/ReadVariableOp:
name: "sequential_1/cond/ReadVariableOp"
op: "ReadVariableOp"
input: "sequential_1/cond/ReadVariableOp/Switch:1"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_1/cond/ReadVariableOp/Switch:
name: "sequential_1/cond/ReadVariableOp/Switch"
op: "Switch"
input: "sequential_1/batch_normalization/gamma"
input: "sequential_1/cond/pred_id"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_1/batch_normalization/gamma"
    }
  }
}

----------------------------------------------------------

	
sequential_1/cond/ReadVariableOp_1:
name: "sequential_1/cond/ReadVariableOp_1"
op: "ReadVariableOp"
input: "sequential_1/cond/ReadVariableOp_1/Switch:1"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_1/cond/ReadVariableOp_1/Switch:
name: "sequential_1/cond/ReadVariableOp_1/Switch"
op: "Switch"
input: "sequential_1/batch_normalization/beta"
input: "sequential_1/cond/pred_id"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_1/batch_normalization/beta"
    }
  }
}

----------------------------------------------------------

	
sequential_1/cond/Const:
name: "sequential_1/cond/Const"
op: "Const"
input: "^sequential_1/cond/switch_t"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

----------------------------------------------------------

	
sequential_1/cond/Const_1:
name: "sequential_1/cond/Const_1"
op: "Const"
input: "^sequential_1/cond/switch_t"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

----------------------------------------------------------

	
sequential_1/cond/FusedBatchNorm:
name: "sequential_1/cond/FusedBatchNorm"
op: "FusedBatchNorm"
input: "sequential_1/cond/FusedBatchNorm/Switch:1"
input: "sequential_1/cond/ReadVariableOp"
input: "sequential_1/cond/ReadVariableOp_1"
input: "sequential_1/cond/Const"
input: "sequential_1/cond/Const_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}

----------------------------------------------------------

	
sequential_1/cond/FusedBatchNorm/Switch:
name: "sequential_1/cond/FusedBatchNorm/Switch"
op: "Switch"
input: "sequential_1/BiasAdd"
input: "sequential_1/cond/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_1/BiasAdd"
    }
  }
}

----------------------------------------------------------

	
sequential_1/cond/ReadVariableOp_2:
name: "sequential_1/cond/ReadVariableOp_2"
op: "ReadVariableOp"
input: "sequential_1/cond/ReadVariableOp_2/Switch:0"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_1/cond/ReadVariableOp_2/Switch:
name: "sequential_1/cond/ReadVariableOp_2/Switch"
op: "Switch"
input: "sequential_1/batch_normalization/gamma"
input: "sequential_1/cond/pred_id"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_1/batch_normalization/gamma"
    }
  }
}

----------------------------------------------------------

	
sequential_1/cond/ReadVariableOp_3:
name: "sequential_1/cond/ReadVariableOp_3"
op: "ReadVariableOp"
input: "sequential_1/cond/ReadVariableOp_3/Switch:0"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_1/cond/ReadVariableOp_3/Switch:
name: "sequential_1/cond/ReadVariableOp_3/Switch"
op: "Switch"
input: "sequential_1/batch_normalization/beta"
input: "sequential_1/cond/pred_id"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_1/batch_normalization/beta"
    }
  }
}

----------------------------------------------------------

	
sequential_1/cond/FusedBatchNorm_1/ReadVariableOp:
name: "sequential_1/cond/FusedBatchNorm_1/ReadVariableOp"
op: "ReadVariableOp"
input: "sequential_1/cond/FusedBatchNorm_1/ReadVariableOp/Switch:0"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_1/cond/FusedBatchNorm_1/ReadVariableOp/Switch:
name: "sequential_1/cond/FusedBatchNorm_1/ReadVariableOp/Switch"
op: "Switch"
input: "sequential_1/batch_normalization/moving_mean"
input: "sequential_1/cond/pred_id"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_1/batch_normalization/moving_mean"
    }
  }
}

----------------------------------------------------------

	
sequential_1/cond/FusedBatchNorm_1/ReadVariableOp_1:
name: "sequential_1/cond/FusedBatchNorm_1/ReadVariableOp_1"
op: "ReadVariableOp"
input: "sequential_1/cond/FusedBatchNorm_1/ReadVariableOp_1/Switch:0"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_1/cond/FusedBatchNorm_1/ReadVariableOp_1/Switch:
name: "sequential_1/cond/FusedBatchNorm_1/ReadVariableOp_1/Switch"
op: "Switch"
input: "sequential_1/batch_normalization/moving_variance"
input: "sequential_1/cond/pred_id"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_1/batch_normalization/moving_variance"
    }
  }
}

----------------------------------------------------------

	
sequential_1/cond/FusedBatchNorm_1:
name: "sequential_1/cond/FusedBatchNorm_1"
op: "FusedBatchNorm"
input: "sequential_1/cond/FusedBatchNorm_1/Switch:0"
input: "sequential_1/cond/ReadVariableOp_2"
input: "sequential_1/cond/ReadVariableOp_3"
input: "sequential_1/cond/FusedBatchNorm_1/ReadVariableOp"
input: "sequential_1/cond/FusedBatchNorm_1/ReadVariableOp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: false
  }
}

----------------------------------------------------------

	
sequential_1/cond/FusedBatchNorm_1/Switch:
name: "sequential_1/cond/FusedBatchNorm_1/Switch"
op: "Switch"
input: "sequential_1/BiasAdd"
input: "sequential_1/cond/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_1/BiasAdd"
    }
  }
}

----------------------------------------------------------

	
sequential_1/cond/Merge:
name: "sequential_1/cond/Merge"
op: "Merge"
input: "sequential_1/cond/FusedBatchNorm_1"
input: "sequential_1/cond/FusedBatchNorm"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_1/cond/Merge_1:
name: "sequential_1/cond/Merge_1"
op: "Merge"
input: "sequential_1/cond/FusedBatchNorm_1:1"
input: "sequential_1/cond/FusedBatchNorm:1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_1/cond/Merge_2:
name: "sequential_1/cond/Merge_2"
op: "Merge"
input: "sequential_1/cond/FusedBatchNorm_1:2"
input: "sequential_1/cond/FusedBatchNorm:2"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_1/cond_1/Switch:
name: "sequential_1/cond_1/Switch"
op: "Switch"
input: "sequential_1/keras_learning_phase"
input: "sequential_1/keras_learning_phase"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}

----------------------------------------------------------

	
sequential_1/cond_1/switch_t:
name: "sequential_1/cond_1/switch_t"
op: "Identity"
input: "sequential_1/cond_1/Switch:1"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}

----------------------------------------------------------

	
sequential_1/cond_1/switch_f:
name: "sequential_1/cond_1/switch_f"
op: "Identity"
input: "sequential_1/cond_1/Switch"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}

----------------------------------------------------------

	
sequential_1/cond_1/pred_id:
name: "sequential_1/cond_1/pred_id"
op: "Identity"
input: "sequential_1/keras_learning_phase"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}

----------------------------------------------------------

	
sequential_1/cond_1/Const:
name: "sequential_1/cond_1/Const"
op: "Const"
input: "^sequential_1/cond_1/switch_t"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.9900000095367432
    }
  }
}

----------------------------------------------------------

	
sequential_1/cond_1/Const_1:
name: "sequential_1/cond_1/Const_1"
op: "Const"
input: "^sequential_1/cond_1/switch_f"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

----------------------------------------------------------

	
sequential_1/cond_1/Merge:
name: "sequential_1/cond_1/Merge"
op: "Merge"
input: "sequential_1/cond_1/Const_1"
input: "sequential_1/cond_1/Const"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_1/AssignMovingAvg/Read/ReadVariableOp:
name: "sequential_1/AssignMovingAvg/Read/ReadVariableOp"
op: "ReadVariableOp"
input: "sequential_1/batch_normalization/moving_mean"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_1/AssignMovingAvg/Identity:
name: "sequential_1/AssignMovingAvg/Identity"
op: "Identity"
input: "sequential_1/AssignMovingAvg/Read/ReadVariableOp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_1/AssignMovingAvg/sub/x:
name: "sequential_1/AssignMovingAvg/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_1/AssignMovingAvg/Read/ReadVariableOp"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

----------------------------------------------------------

	
sequential_1/AssignMovingAvg/sub:
name: "sequential_1/AssignMovingAvg/sub"
op: "Sub"
input: "sequential_1/AssignMovingAvg/sub/x"
input: "sequential_1/cond_1/Merge"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_1/AssignMovingAvg/Read/ReadVariableOp"
    }
  }
}

----------------------------------------------------------

	
sequential_1/AssignMovingAvg/ReadVariableOp:
name: "sequential_1/AssignMovingAvg/ReadVariableOp"
op: "ReadVariableOp"
input: "sequential_1/batch_normalization/moving_mean"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_1/AssignMovingAvg/sub_1:
name: "sequential_1/AssignMovingAvg/sub_1"
op: "Sub"
input: "sequential_1/AssignMovingAvg/ReadVariableOp"
input: "sequential_1/cond/Merge_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_1/AssignMovingAvg/Read/ReadVariableOp"
    }
  }
}

----------------------------------------------------------

	
sequential_1/AssignMovingAvg/mul:
name: "sequential_1/AssignMovingAvg/mul"
op: "Mul"
input: "sequential_1/AssignMovingAvg/sub_1"
input: "sequential_1/AssignMovingAvg/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_1/AssignMovingAvg/Read/ReadVariableOp"
    }
  }
}

----------------------------------------------------------

	
sequential_1/AssignMovingAvg/AssignSubVariableOp:
name: "sequential_1/AssignMovingAvg/AssignSubVariableOp"
op: "AssignSubVariableOp"
input: "sequential_1/batch_normalization/moving_mean"
input: "sequential_1/AssignMovingAvg/mul"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_1/AssignMovingAvg/Read/ReadVariableOp"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_1/AssignMovingAvg/ReadVariableOp_1:
name: "sequential_1/AssignMovingAvg/ReadVariableOp_1"
op: "ReadVariableOp"
input: "sequential_1/batch_normalization/moving_mean"
input: "^sequential_1/AssignMovingAvg/AssignSubVariableOp"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_1/AssignMovingAvg/Read/ReadVariableOp"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_1/AssignMovingAvg_1/Read/ReadVariableOp:
name: "sequential_1/AssignMovingAvg_1/Read/ReadVariableOp"
op: "ReadVariableOp"
input: "sequential_1/batch_normalization/moving_variance"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_1/AssignMovingAvg_1/Identity:
name: "sequential_1/AssignMovingAvg_1/Identity"
op: "Identity"
input: "sequential_1/AssignMovingAvg_1/Read/ReadVariableOp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_1/AssignMovingAvg_1/sub/x:
name: "sequential_1/AssignMovingAvg_1/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_1/AssignMovingAvg_1/Read/ReadVariableOp"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

----------------------------------------------------------

	
sequential_1/AssignMovingAvg_1/sub:
name: "sequential_1/AssignMovingAvg_1/sub"
op: "Sub"
input: "sequential_1/AssignMovingAvg_1/sub/x"
input: "sequential_1/cond_1/Merge"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_1/AssignMovingAvg_1/Read/ReadVariableOp"
    }
  }
}

----------------------------------------------------------

	
sequential_1/AssignMovingAvg_1/ReadVariableOp:
name: "sequential_1/AssignMovingAvg_1/ReadVariableOp"
op: "ReadVariableOp"
input: "sequential_1/batch_normalization/moving_variance"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_1/AssignMovingAvg_1/sub_1:
name: "sequential_1/AssignMovingAvg_1/sub_1"
op: "Sub"
input: "sequential_1/AssignMovingAvg_1/ReadVariableOp"
input: "sequential_1/cond/Merge_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_1/AssignMovingAvg_1/Read/ReadVariableOp"
    }
  }
}

----------------------------------------------------------

	
sequential_1/AssignMovingAvg_1/mul:
name: "sequential_1/AssignMovingAvg_1/mul"
op: "Mul"
input: "sequential_1/AssignMovingAvg_1/sub_1"
input: "sequential_1/AssignMovingAvg_1/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_1/AssignMovingAvg_1/Read/ReadVariableOp"
    }
  }
}

----------------------------------------------------------

	
sequential_1/AssignMovingAvg_1/AssignSubVariableOp:
name: "sequential_1/AssignMovingAvg_1/AssignSubVariableOp"
op: "AssignSubVariableOp"
input: "sequential_1/batch_normalization/moving_variance"
input: "sequential_1/AssignMovingAvg_1/mul"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_1/AssignMovingAvg_1/Read/ReadVariableOp"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_1/AssignMovingAvg_1/ReadVariableOp_1:
name: "sequential_1/AssignMovingAvg_1/ReadVariableOp_1"
op: "ReadVariableOp"
input: "sequential_1/batch_normalization/moving_variance"
input: "^sequential_1/AssignMovingAvg_1/AssignSubVariableOp"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_1/AssignMovingAvg_1/Read/ReadVariableOp"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_1/Relu:
name: "sequential_1/Relu"
op: "Relu"
input: "sequential_1/cond/Merge"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_2/conv2d_1/kernel/Initializer/random_uniform/shape:
name: "sequential_2/conv2d_1/kernel/Initializer/random_uniform/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_2/conv2d_1/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
    }
  }
}

----------------------------------------------------------

	
sequential_2/conv2d_1/kernel/Initializer/random_uniform/min:
name: "sequential_2/conv2d_1/kernel/Initializer/random_uniform/min"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_2/conv2d_1/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: -0.10206207633018494
    }
  }
}

----------------------------------------------------------

	
sequential_2/conv2d_1/kernel/Initializer/random_uniform/max:
name: "sequential_2/conv2d_1/kernel/Initializer/random_uniform/max"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_2/conv2d_1/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.10206207633018494
    }
  }
}

----------------------------------------------------------

	
sequential_2/conv2d_1/kernel/Initializer/random_uniform/RandomUniform:
name: "sequential_2/conv2d_1/kernel/Initializer/random_uniform/RandomUniform"
op: "RandomUniform"
input: "sequential_2/conv2d_1/kernel/Initializer/random_uniform/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_2/conv2d_1/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

----------------------------------------------------------

	
sequential_2/conv2d_1/kernel/Initializer/random_uniform/sub:
name: "sequential_2/conv2d_1/kernel/Initializer/random_uniform/sub"
op: "Sub"
input: "sequential_2/conv2d_1/kernel/Initializer/random_uniform/max"
input: "sequential_2/conv2d_1/kernel/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_2/conv2d_1/kernel"
    }
  }
}

----------------------------------------------------------

	
sequential_2/conv2d_1/kernel/Initializer/random_uniform/mul:
name: "sequential_2/conv2d_1/kernel/Initializer/random_uniform/mul"
op: "Mul"
input: "sequential_2/conv2d_1/kernel/Initializer/random_uniform/RandomUniform"
input: "sequential_2/conv2d_1/kernel/Initializer/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_2/conv2d_1/kernel"
    }
  }
}

----------------------------------------------------------

	
sequential_2/conv2d_1/kernel/Initializer/random_uniform:
name: "sequential_2/conv2d_1/kernel/Initializer/random_uniform"
op: "Add"
input: "sequential_2/conv2d_1/kernel/Initializer/random_uniform/mul"
input: "sequential_2/conv2d_1/kernel/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_2/conv2d_1/kernel"
    }
  }
}

----------------------------------------------------------

	
sequential_2/conv2d_1/kernel:
name: "sequential_2/conv2d_1/kernel"
op: "VarHandleOp"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_2/conv2d_1/kernel"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 32
      }
      dim {
        size: 32
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: "sequential_2/conv2d_1/kernel"
  }
}

----------------------------------------------------------

	
sequential_2/conv2d_1/kernel/IsInitialized/VarIsInitializedOp:
name: "sequential_2/conv2d_1/kernel/IsInitialized/VarIsInitializedOp"
op: "VarIsInitializedOp"
input: "sequential_2/conv2d_1/kernel"

----------------------------------------------------------

	
sequential_2/conv2d_1/kernel/Assign:
name: "sequential_2/conv2d_1/kernel/Assign"
op: "AssignVariableOp"
input: "sequential_2/conv2d_1/kernel"
input: "sequential_2/conv2d_1/kernel/Initializer/random_uniform"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_2/conv2d_1/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_2/conv2d_1/kernel/Read/ReadVariableOp:
name: "sequential_2/conv2d_1/kernel/Read/ReadVariableOp"
op: "ReadVariableOp"
input: "sequential_2/conv2d_1/kernel"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_2/conv2d_1/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_2/conv2d_1/bias/Initializer/zeros:
name: "sequential_2/conv2d_1/bias/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_2/conv2d_1/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 32
        }
      }
      float_val: 0.0
    }
  }
}

----------------------------------------------------------

	
sequential_2/conv2d_1/bias:
name: "sequential_2/conv2d_1/bias"
op: "VarHandleOp"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_2/conv2d_1/bias"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 32
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: "sequential_2/conv2d_1/bias"
  }
}

----------------------------------------------------------

	
sequential_2/conv2d_1/bias/IsInitialized/VarIsInitializedOp:
name: "sequential_2/conv2d_1/bias/IsInitialized/VarIsInitializedOp"
op: "VarIsInitializedOp"
input: "sequential_2/conv2d_1/bias"

----------------------------------------------------------

	
sequential_2/conv2d_1/bias/Assign:
name: "sequential_2/conv2d_1/bias/Assign"
op: "AssignVariableOp"
input: "sequential_2/conv2d_1/bias"
input: "sequential_2/conv2d_1/bias/Initializer/zeros"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_2/conv2d_1/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_2/conv2d_1/bias/Read/ReadVariableOp:
name: "sequential_2/conv2d_1/bias/Read/ReadVariableOp"
op: "ReadVariableOp"
input: "sequential_2/conv2d_1/bias"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_2/conv2d_1/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_2/conv2d_1/dilation_rate:
name: "sequential_2/conv2d_1/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}

----------------------------------------------------------

	
sequential_2/batch_normalization_1/gamma/Initializer/ones:
name: "sequential_2/batch_normalization_1/gamma/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_2/batch_normalization_1/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 32
        }
      }
      float_val: 1.0
    }
  }
}

----------------------------------------------------------

	
sequential_2/batch_normalization_1/gamma:
name: "sequential_2/batch_normalization_1/gamma"
op: "VarHandleOp"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_2/batch_normalization_1/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 32
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: "sequential_2/batch_normalization_1/gamma"
  }
}

----------------------------------------------------------

	
sequential_2/batch_normalization_1/gamma/IsInitialized/VarIsInitializedOp:
name: "sequential_2/batch_normalization_1/gamma/IsInitialized/VarIsInitializedOp"
op: "VarIsInitializedOp"
input: "sequential_2/batch_normalization_1/gamma"

----------------------------------------------------------

	
sequential_2/batch_normalization_1/gamma/Assign:
name: "sequential_2/batch_normalization_1/gamma/Assign"
op: "AssignVariableOp"
input: "sequential_2/batch_normalization_1/gamma"
input: "sequential_2/batch_normalization_1/gamma/Initializer/ones"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_2/batch_normalization_1/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_2/batch_normalization_1/gamma/Read/ReadVariableOp:
name: "sequential_2/batch_normalization_1/gamma/Read/ReadVariableOp"
op: "ReadVariableOp"
input: "sequential_2/batch_normalization_1/gamma"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_2/batch_normalization_1/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_2/batch_normalization_1/beta/Initializer/zeros:
name: "sequential_2/batch_normalization_1/beta/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_2/batch_normalization_1/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 32
        }
      }
      float_val: 0.0
    }
  }
}

----------------------------------------------------------

	
sequential_2/batch_normalization_1/beta:
name: "sequential_2/batch_normalization_1/beta"
op: "VarHandleOp"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_2/batch_normalization_1/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 32
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: "sequential_2/batch_normalization_1/beta"
  }
}

----------------------------------------------------------

	
sequential_2/batch_normalization_1/beta/IsInitialized/VarIsInitializedOp:
name: "sequential_2/batch_normalization_1/beta/IsInitialized/VarIsInitializedOp"
op: "VarIsInitializedOp"
input: "sequential_2/batch_normalization_1/beta"

----------------------------------------------------------

	
sequential_2/batch_normalization_1/beta/Assign:
name: "sequential_2/batch_normalization_1/beta/Assign"
op: "AssignVariableOp"
input: "sequential_2/batch_normalization_1/beta"
input: "sequential_2/batch_normalization_1/beta/Initializer/zeros"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_2/batch_normalization_1/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_2/batch_normalization_1/beta/Read/ReadVariableOp:
name: "sequential_2/batch_normalization_1/beta/Read/ReadVariableOp"
op: "ReadVariableOp"
input: "sequential_2/batch_normalization_1/beta"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_2/batch_normalization_1/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_2/batch_normalization_1/moving_mean/Initializer/zeros:
name: "sequential_2/batch_normalization_1/moving_mean/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_2/batch_normalization_1/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 32
        }
      }
      float_val: 0.0
    }
  }
}

----------------------------------------------------------

	
sequential_2/batch_normalization_1/moving_mean:
name: "sequential_2/batch_normalization_1/moving_mean"
op: "VarHandleOp"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_2/batch_normalization_1/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 32
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: "sequential_2/batch_normalization_1/moving_mean"
  }
}

----------------------------------------------------------

	
sequential_2/batch_normalization_1/moving_mean/IsInitialized/VarIsInitializedOp:
name: "sequential_2/batch_normalization_1/moving_mean/IsInitialized/VarIsInitializedOp"
op: "VarIsInitializedOp"
input: "sequential_2/batch_normalization_1/moving_mean"

----------------------------------------------------------

	
sequential_2/batch_normalization_1/moving_mean/Assign:
name: "sequential_2/batch_normalization_1/moving_mean/Assign"
op: "AssignVariableOp"
input: "sequential_2/batch_normalization_1/moving_mean"
input: "sequential_2/batch_normalization_1/moving_mean/Initializer/zeros"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_2/batch_normalization_1/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_2/batch_normalization_1/moving_mean/Read/ReadVariableOp:
name: "sequential_2/batch_normalization_1/moving_mean/Read/ReadVariableOp"
op: "ReadVariableOp"
input: "sequential_2/batch_normalization_1/moving_mean"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_2/batch_normalization_1/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_2/batch_normalization_1/moving_variance/Initializer/ones:
name: "sequential_2/batch_normalization_1/moving_variance/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_2/batch_normalization_1/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 32
        }
      }
      float_val: 1.0
    }
  }
}

----------------------------------------------------------

	
sequential_2/batch_normalization_1/moving_variance:
name: "sequential_2/batch_normalization_1/moving_variance"
op: "VarHandleOp"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_2/batch_normalization_1/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 32
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: "sequential_2/batch_normalization_1/moving_variance"
  }
}

----------------------------------------------------------

	
sequential_2/batch_normalization_1/moving_variance/IsInitialized/VarIsInitializedOp:
name: "sequential_2/batch_normalization_1/moving_variance/IsInitialized/VarIsInitializedOp"
op: "VarIsInitializedOp"
input: "sequential_2/batch_normalization_1/moving_variance"

----------------------------------------------------------

	
sequential_2/batch_normalization_1/moving_variance/Assign:
name: "sequential_2/batch_normalization_1/moving_variance/Assign"
op: "AssignVariableOp"
input: "sequential_2/batch_normalization_1/moving_variance"
input: "sequential_2/batch_normalization_1/moving_variance/Initializer/ones"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_2/batch_normalization_1/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_2/batch_normalization_1/moving_variance/Read/ReadVariableOp:
name: "sequential_2/batch_normalization_1/moving_variance/Read/ReadVariableOp"
op: "ReadVariableOp"
input: "sequential_2/batch_normalization_1/moving_variance"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_2/batch_normalization_1/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_2/Conv2D/ReadVariableOp:
name: "sequential_2/Conv2D/ReadVariableOp"
op: "ReadVariableOp"
input: "sequential_2/conv2d_1/kernel"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_2/Conv2D:
name: "sequential_2/Conv2D"
op: "Conv2D"
input: "sequential_1/Relu"
input: "sequential_2/Conv2D/ReadVariableOp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

----------------------------------------------------------

	
sequential_2/BiasAdd/ReadVariableOp:
name: "sequential_2/BiasAdd/ReadVariableOp"
op: "ReadVariableOp"
input: "sequential_2/conv2d_1/bias"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_2/BiasAdd:
name: "sequential_2/BiasAdd"
op: "BiasAdd"
input: "sequential_2/Conv2D"
input: "sequential_2/BiasAdd/ReadVariableOp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

----------------------------------------------------------

	
sequential_2/cond/Switch:
name: "sequential_2/cond/Switch"
op: "Switch"
input: "sequential_1/keras_learning_phase"
input: "sequential_1/keras_learning_phase"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}

----------------------------------------------------------

	
sequential_2/cond/switch_t:
name: "sequential_2/cond/switch_t"
op: "Identity"
input: "sequential_2/cond/Switch:1"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}

----------------------------------------------------------

	
sequential_2/cond/switch_f:
name: "sequential_2/cond/switch_f"
op: "Identity"
input: "sequential_2/cond/Switch"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}

----------------------------------------------------------

	
sequential_2/cond/pred_id:
name: "sequential_2/cond/pred_id"
op: "Identity"
input: "sequential_1/keras_learning_phase"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}

----------------------------------------------------------

	
sequential_2/cond/ReadVariableOp:
name: "sequential_2/cond/ReadVariableOp"
op: "ReadVariableOp"
input: "sequential_2/cond/ReadVariableOp/Switch:1"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_2/cond/ReadVariableOp/Switch:
name: "sequential_2/cond/ReadVariableOp/Switch"
op: "Switch"
input: "sequential_2/batch_normalization_1/gamma"
input: "sequential_2/cond/pred_id"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_2/batch_normalization_1/gamma"
    }
  }
}

----------------------------------------------------------

	
sequential_2/cond/ReadVariableOp_1:
name: "sequential_2/cond/ReadVariableOp_1"
op: "ReadVariableOp"
input: "sequential_2/cond/ReadVariableOp_1/Switch:1"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_2/cond/ReadVariableOp_1/Switch:
name: "sequential_2/cond/ReadVariableOp_1/Switch"
op: "Switch"
input: "sequential_2/batch_normalization_1/beta"
input: "sequential_2/cond/pred_id"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_2/batch_normalization_1/beta"
    }
  }
}

----------------------------------------------------------

	
sequential_2/cond/Const:
name: "sequential_2/cond/Const"
op: "Const"
input: "^sequential_2/cond/switch_t"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

----------------------------------------------------------

	
sequential_2/cond/Const_1:
name: "sequential_2/cond/Const_1"
op: "Const"
input: "^sequential_2/cond/switch_t"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

----------------------------------------------------------

	
sequential_2/cond/FusedBatchNorm:
name: "sequential_2/cond/FusedBatchNorm"
op: "FusedBatchNorm"
input: "sequential_2/cond/FusedBatchNorm/Switch:1"
input: "sequential_2/cond/ReadVariableOp"
input: "sequential_2/cond/ReadVariableOp_1"
input: "sequential_2/cond/Const"
input: "sequential_2/cond/Const_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}

----------------------------------------------------------

	
sequential_2/cond/FusedBatchNorm/Switch:
name: "sequential_2/cond/FusedBatchNorm/Switch"
op: "Switch"
input: "sequential_2/BiasAdd"
input: "sequential_2/cond/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_2/BiasAdd"
    }
  }
}

----------------------------------------------------------

	
sequential_2/cond/ReadVariableOp_2:
name: "sequential_2/cond/ReadVariableOp_2"
op: "ReadVariableOp"
input: "sequential_2/cond/ReadVariableOp_2/Switch:0"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_2/cond/ReadVariableOp_2/Switch:
name: "sequential_2/cond/ReadVariableOp_2/Switch"
op: "Switch"
input: "sequential_2/batch_normalization_1/gamma"
input: "sequential_2/cond/pred_id"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_2/batch_normalization_1/gamma"
    }
  }
}

----------------------------------------------------------

	
sequential_2/cond/ReadVariableOp_3:
name: "sequential_2/cond/ReadVariableOp_3"
op: "ReadVariableOp"
input: "sequential_2/cond/ReadVariableOp_3/Switch:0"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_2/cond/ReadVariableOp_3/Switch:
name: "sequential_2/cond/ReadVariableOp_3/Switch"
op: "Switch"
input: "sequential_2/batch_normalization_1/beta"
input: "sequential_2/cond/pred_id"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_2/batch_normalization_1/beta"
    }
  }
}

----------------------------------------------------------

	
sequential_2/cond/FusedBatchNorm_1/ReadVariableOp:
name: "sequential_2/cond/FusedBatchNorm_1/ReadVariableOp"
op: "ReadVariableOp"
input: "sequential_2/cond/FusedBatchNorm_1/ReadVariableOp/Switch:0"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_2/cond/FusedBatchNorm_1/ReadVariableOp/Switch:
name: "sequential_2/cond/FusedBatchNorm_1/ReadVariableOp/Switch"
op: "Switch"
input: "sequential_2/batch_normalization_1/moving_mean"
input: "sequential_2/cond/pred_id"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_2/batch_normalization_1/moving_mean"
    }
  }
}

----------------------------------------------------------

	
sequential_2/cond/FusedBatchNorm_1/ReadVariableOp_1:
name: "sequential_2/cond/FusedBatchNorm_1/ReadVariableOp_1"
op: "ReadVariableOp"
input: "sequential_2/cond/FusedBatchNorm_1/ReadVariableOp_1/Switch:0"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_2/cond/FusedBatchNorm_1/ReadVariableOp_1/Switch:
name: "sequential_2/cond/FusedBatchNorm_1/ReadVariableOp_1/Switch"
op: "Switch"
input: "sequential_2/batch_normalization_1/moving_variance"
input: "sequential_2/cond/pred_id"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_2/batch_normalization_1/moving_variance"
    }
  }
}

----------------------------------------------------------

	
sequential_2/cond/FusedBatchNorm_1:
name: "sequential_2/cond/FusedBatchNorm_1"
op: "FusedBatchNorm"
input: "sequential_2/cond/FusedBatchNorm_1/Switch:0"
input: "sequential_2/cond/ReadVariableOp_2"
input: "sequential_2/cond/ReadVariableOp_3"
input: "sequential_2/cond/FusedBatchNorm_1/ReadVariableOp"
input: "sequential_2/cond/FusedBatchNorm_1/ReadVariableOp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: false
  }
}

----------------------------------------------------------

	
sequential_2/cond/FusedBatchNorm_1/Switch:
name: "sequential_2/cond/FusedBatchNorm_1/Switch"
op: "Switch"
input: "sequential_2/BiasAdd"
input: "sequential_2/cond/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_2/BiasAdd"
    }
  }
}

----------------------------------------------------------

	
sequential_2/cond/Merge:
name: "sequential_2/cond/Merge"
op: "Merge"
input: "sequential_2/cond/FusedBatchNorm_1"
input: "sequential_2/cond/FusedBatchNorm"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_2/cond/Merge_1:
name: "sequential_2/cond/Merge_1"
op: "Merge"
input: "sequential_2/cond/FusedBatchNorm_1:1"
input: "sequential_2/cond/FusedBatchNorm:1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_2/cond/Merge_2:
name: "sequential_2/cond/Merge_2"
op: "Merge"
input: "sequential_2/cond/FusedBatchNorm_1:2"
input: "sequential_2/cond/FusedBatchNorm:2"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_2/cond_1/Switch:
name: "sequential_2/cond_1/Switch"
op: "Switch"
input: "sequential_1/keras_learning_phase"
input: "sequential_1/keras_learning_phase"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}

----------------------------------------------------------

	
sequential_2/cond_1/switch_t:
name: "sequential_2/cond_1/switch_t"
op: "Identity"
input: "sequential_2/cond_1/Switch:1"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}

----------------------------------------------------------

	
sequential_2/cond_1/switch_f:
name: "sequential_2/cond_1/switch_f"
op: "Identity"
input: "sequential_2/cond_1/Switch"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}

----------------------------------------------------------

	
sequential_2/cond_1/pred_id:
name: "sequential_2/cond_1/pred_id"
op: "Identity"
input: "sequential_1/keras_learning_phase"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}

----------------------------------------------------------

	
sequential_2/cond_1/Const:
name: "sequential_2/cond_1/Const"
op: "Const"
input: "^sequential_2/cond_1/switch_t"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.9900000095367432
    }
  }
}

----------------------------------------------------------

	
sequential_2/cond_1/Const_1:
name: "sequential_2/cond_1/Const_1"
op: "Const"
input: "^sequential_2/cond_1/switch_f"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

----------------------------------------------------------

	
sequential_2/cond_1/Merge:
name: "sequential_2/cond_1/Merge"
op: "Merge"
input: "sequential_2/cond_1/Const_1"
input: "sequential_2/cond_1/Const"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_2/AssignMovingAvg/Read/ReadVariableOp:
name: "sequential_2/AssignMovingAvg/Read/ReadVariableOp"
op: "ReadVariableOp"
input: "sequential_2/batch_normalization_1/moving_mean"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_2/AssignMovingAvg/Identity:
name: "sequential_2/AssignMovingAvg/Identity"
op: "Identity"
input: "sequential_2/AssignMovingAvg/Read/ReadVariableOp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_2/AssignMovingAvg/sub/x:
name: "sequential_2/AssignMovingAvg/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_2/AssignMovingAvg/Read/ReadVariableOp"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

----------------------------------------------------------

	
sequential_2/AssignMovingAvg/sub:
name: "sequential_2/AssignMovingAvg/sub"
op: "Sub"
input: "sequential_2/AssignMovingAvg/sub/x"
input: "sequential_2/cond_1/Merge"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_2/AssignMovingAvg/Read/ReadVariableOp"
    }
  }
}

----------------------------------------------------------

	
sequential_2/AssignMovingAvg/ReadVariableOp:
name: "sequential_2/AssignMovingAvg/ReadVariableOp"
op: "ReadVariableOp"
input: "sequential_2/batch_normalization_1/moving_mean"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_2/AssignMovingAvg/sub_1:
name: "sequential_2/AssignMovingAvg/sub_1"
op: "Sub"
input: "sequential_2/AssignMovingAvg/ReadVariableOp"
input: "sequential_2/cond/Merge_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_2/AssignMovingAvg/Read/ReadVariableOp"
    }
  }
}

----------------------------------------------------------

	
sequential_2/AssignMovingAvg/mul:
name: "sequential_2/AssignMovingAvg/mul"
op: "Mul"
input: "sequential_2/AssignMovingAvg/sub_1"
input: "sequential_2/AssignMovingAvg/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_2/AssignMovingAvg/Read/ReadVariableOp"
    }
  }
}

----------------------------------------------------------

	
sequential_2/AssignMovingAvg/AssignSubVariableOp:
name: "sequential_2/AssignMovingAvg/AssignSubVariableOp"
op: "AssignSubVariableOp"
input: "sequential_2/batch_normalization_1/moving_mean"
input: "sequential_2/AssignMovingAvg/mul"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_2/AssignMovingAvg/Read/ReadVariableOp"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_2/AssignMovingAvg/ReadVariableOp_1:
name: "sequential_2/AssignMovingAvg/ReadVariableOp_1"
op: "ReadVariableOp"
input: "sequential_2/batch_normalization_1/moving_mean"
input: "^sequential_2/AssignMovingAvg/AssignSubVariableOp"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_2/AssignMovingAvg/Read/ReadVariableOp"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_2/AssignMovingAvg_1/Read/ReadVariableOp:
name: "sequential_2/AssignMovingAvg_1/Read/ReadVariableOp"
op: "ReadVariableOp"
input: "sequential_2/batch_normalization_1/moving_variance"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_2/AssignMovingAvg_1/Identity:
name: "sequential_2/AssignMovingAvg_1/Identity"
op: "Identity"
input: "sequential_2/AssignMovingAvg_1/Read/ReadVariableOp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_2/AssignMovingAvg_1/sub/x:
name: "sequential_2/AssignMovingAvg_1/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_2/AssignMovingAvg_1/Read/ReadVariableOp"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

----------------------------------------------------------

	
sequential_2/AssignMovingAvg_1/sub:
name: "sequential_2/AssignMovingAvg_1/sub"
op: "Sub"
input: "sequential_2/AssignMovingAvg_1/sub/x"
input: "sequential_2/cond_1/Merge"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_2/AssignMovingAvg_1/Read/ReadVariableOp"
    }
  }
}

----------------------------------------------------------

	
sequential_2/AssignMovingAvg_1/ReadVariableOp:
name: "sequential_2/AssignMovingAvg_1/ReadVariableOp"
op: "ReadVariableOp"
input: "sequential_2/batch_normalization_1/moving_variance"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_2/AssignMovingAvg_1/sub_1:
name: "sequential_2/AssignMovingAvg_1/sub_1"
op: "Sub"
input: "sequential_2/AssignMovingAvg_1/ReadVariableOp"
input: "sequential_2/cond/Merge_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_2/AssignMovingAvg_1/Read/ReadVariableOp"
    }
  }
}

----------------------------------------------------------

	
sequential_2/AssignMovingAvg_1/mul:
name: "sequential_2/AssignMovingAvg_1/mul"
op: "Mul"
input: "sequential_2/AssignMovingAvg_1/sub_1"
input: "sequential_2/AssignMovingAvg_1/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_2/AssignMovingAvg_1/Read/ReadVariableOp"
    }
  }
}

----------------------------------------------------------

	
sequential_2/AssignMovingAvg_1/AssignSubVariableOp:
name: "sequential_2/AssignMovingAvg_1/AssignSubVariableOp"
op: "AssignSubVariableOp"
input: "sequential_2/batch_normalization_1/moving_variance"
input: "sequential_2/AssignMovingAvg_1/mul"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_2/AssignMovingAvg_1/Read/ReadVariableOp"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_2/AssignMovingAvg_1/ReadVariableOp_1:
name: "sequential_2/AssignMovingAvg_1/ReadVariableOp_1"
op: "ReadVariableOp"
input: "sequential_2/batch_normalization_1/moving_variance"
input: "^sequential_2/AssignMovingAvg_1/AssignSubVariableOp"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_2/AssignMovingAvg_1/Read/ReadVariableOp"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_2/Relu:
name: "sequential_2/Relu"
op: "Relu"
input: "sequential_2/cond/Merge"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_3/conv2d_2/kernel/Initializer/random_uniform/shape:
name: "sequential_3/conv2d_2/kernel/Initializer/random_uniform/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_3/conv2d_2/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
    }
  }
}

----------------------------------------------------------

	
sequential_3/conv2d_2/kernel/Initializer/random_uniform/min:
name: "sequential_3/conv2d_2/kernel/Initializer/random_uniform/min"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_3/conv2d_2/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: -0.10206207633018494
    }
  }
}

----------------------------------------------------------

	
sequential_3/conv2d_2/kernel/Initializer/random_uniform/max:
name: "sequential_3/conv2d_2/kernel/Initializer/random_uniform/max"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_3/conv2d_2/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.10206207633018494
    }
  }
}

----------------------------------------------------------

	
sequential_3/conv2d_2/kernel/Initializer/random_uniform/RandomUniform:
name: "sequential_3/conv2d_2/kernel/Initializer/random_uniform/RandomUniform"
op: "RandomUniform"
input: "sequential_3/conv2d_2/kernel/Initializer/random_uniform/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_3/conv2d_2/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

----------------------------------------------------------

	
sequential_3/conv2d_2/kernel/Initializer/random_uniform/sub:
name: "sequential_3/conv2d_2/kernel/Initializer/random_uniform/sub"
op: "Sub"
input: "sequential_3/conv2d_2/kernel/Initializer/random_uniform/max"
input: "sequential_3/conv2d_2/kernel/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_3/conv2d_2/kernel"
    }
  }
}

----------------------------------------------------------

	
sequential_3/conv2d_2/kernel/Initializer/random_uniform/mul:
name: "sequential_3/conv2d_2/kernel/Initializer/random_uniform/mul"
op: "Mul"
input: "sequential_3/conv2d_2/kernel/Initializer/random_uniform/RandomUniform"
input: "sequential_3/conv2d_2/kernel/Initializer/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_3/conv2d_2/kernel"
    }
  }
}

----------------------------------------------------------

	
sequential_3/conv2d_2/kernel/Initializer/random_uniform:
name: "sequential_3/conv2d_2/kernel/Initializer/random_uniform"
op: "Add"
input: "sequential_3/conv2d_2/kernel/Initializer/random_uniform/mul"
input: "sequential_3/conv2d_2/kernel/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_3/conv2d_2/kernel"
    }
  }
}

----------------------------------------------------------

	
sequential_3/conv2d_2/kernel:
name: "sequential_3/conv2d_2/kernel"
op: "VarHandleOp"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_3/conv2d_2/kernel"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 32
      }
      dim {
        size: 32
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: "sequential_3/conv2d_2/kernel"
  }
}

----------------------------------------------------------

	
sequential_3/conv2d_2/kernel/IsInitialized/VarIsInitializedOp:
name: "sequential_3/conv2d_2/kernel/IsInitialized/VarIsInitializedOp"
op: "VarIsInitializedOp"
input: "sequential_3/conv2d_2/kernel"

----------------------------------------------------------

	
sequential_3/conv2d_2/kernel/Assign:
name: "sequential_3/conv2d_2/kernel/Assign"
op: "AssignVariableOp"
input: "sequential_3/conv2d_2/kernel"
input: "sequential_3/conv2d_2/kernel/Initializer/random_uniform"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_3/conv2d_2/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_3/conv2d_2/kernel/Read/ReadVariableOp:
name: "sequential_3/conv2d_2/kernel/Read/ReadVariableOp"
op: "ReadVariableOp"
input: "sequential_3/conv2d_2/kernel"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_3/conv2d_2/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_3/conv2d_2/bias/Initializer/zeros:
name: "sequential_3/conv2d_2/bias/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_3/conv2d_2/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 32
        }
      }
      float_val: 0.0
    }
  }
}

----------------------------------------------------------

	
sequential_3/conv2d_2/bias:
name: "sequential_3/conv2d_2/bias"
op: "VarHandleOp"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_3/conv2d_2/bias"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 32
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: "sequential_3/conv2d_2/bias"
  }
}

----------------------------------------------------------

	
sequential_3/conv2d_2/bias/IsInitialized/VarIsInitializedOp:
name: "sequential_3/conv2d_2/bias/IsInitialized/VarIsInitializedOp"
op: "VarIsInitializedOp"
input: "sequential_3/conv2d_2/bias"

----------------------------------------------------------

	
sequential_3/conv2d_2/bias/Assign:
name: "sequential_3/conv2d_2/bias/Assign"
op: "AssignVariableOp"
input: "sequential_3/conv2d_2/bias"
input: "sequential_3/conv2d_2/bias/Initializer/zeros"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_3/conv2d_2/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_3/conv2d_2/bias/Read/ReadVariableOp:
name: "sequential_3/conv2d_2/bias/Read/ReadVariableOp"
op: "ReadVariableOp"
input: "sequential_3/conv2d_2/bias"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_3/conv2d_2/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_3/conv2d_2/dilation_rate:
name: "sequential_3/conv2d_2/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}

----------------------------------------------------------

	
sequential_3/batch_normalization_2/gamma/Initializer/ones:
name: "sequential_3/batch_normalization_2/gamma/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_3/batch_normalization_2/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 32
        }
      }
      float_val: 1.0
    }
  }
}

----------------------------------------------------------

	
sequential_3/batch_normalization_2/gamma:
name: "sequential_3/batch_normalization_2/gamma"
op: "VarHandleOp"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_3/batch_normalization_2/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 32
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: "sequential_3/batch_normalization_2/gamma"
  }
}

----------------------------------------------------------

	
sequential_3/batch_normalization_2/gamma/IsInitialized/VarIsInitializedOp:
name: "sequential_3/batch_normalization_2/gamma/IsInitialized/VarIsInitializedOp"
op: "VarIsInitializedOp"
input: "sequential_3/batch_normalization_2/gamma"

----------------------------------------------------------

	
sequential_3/batch_normalization_2/gamma/Assign:
name: "sequential_3/batch_normalization_2/gamma/Assign"
op: "AssignVariableOp"
input: "sequential_3/batch_normalization_2/gamma"
input: "sequential_3/batch_normalization_2/gamma/Initializer/ones"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_3/batch_normalization_2/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_3/batch_normalization_2/gamma/Read/ReadVariableOp:
name: "sequential_3/batch_normalization_2/gamma/Read/ReadVariableOp"
op: "ReadVariableOp"
input: "sequential_3/batch_normalization_2/gamma"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_3/batch_normalization_2/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_3/batch_normalization_2/beta/Initializer/zeros:
name: "sequential_3/batch_normalization_2/beta/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_3/batch_normalization_2/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 32
        }
      }
      float_val: 0.0
    }
  }
}

----------------------------------------------------------

	
sequential_3/batch_normalization_2/beta:
name: "sequential_3/batch_normalization_2/beta"
op: "VarHandleOp"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_3/batch_normalization_2/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 32
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: "sequential_3/batch_normalization_2/beta"
  }
}

----------------------------------------------------------

	
sequential_3/batch_normalization_2/beta/IsInitialized/VarIsInitializedOp:
name: "sequential_3/batch_normalization_2/beta/IsInitialized/VarIsInitializedOp"
op: "VarIsInitializedOp"
input: "sequential_3/batch_normalization_2/beta"

----------------------------------------------------------

	
sequential_3/batch_normalization_2/beta/Assign:
name: "sequential_3/batch_normalization_2/beta/Assign"
op: "AssignVariableOp"
input: "sequential_3/batch_normalization_2/beta"
input: "sequential_3/batch_normalization_2/beta/Initializer/zeros"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_3/batch_normalization_2/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_3/batch_normalization_2/beta/Read/ReadVariableOp:
name: "sequential_3/batch_normalization_2/beta/Read/ReadVariableOp"
op: "ReadVariableOp"
input: "sequential_3/batch_normalization_2/beta"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_3/batch_normalization_2/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_3/batch_normalization_2/moving_mean/Initializer/zeros:
name: "sequential_3/batch_normalization_2/moving_mean/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_3/batch_normalization_2/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 32
        }
      }
      float_val: 0.0
    }
  }
}

----------------------------------------------------------

	
sequential_3/batch_normalization_2/moving_mean:
name: "sequential_3/batch_normalization_2/moving_mean"
op: "VarHandleOp"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_3/batch_normalization_2/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 32
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: "sequential_3/batch_normalization_2/moving_mean"
  }
}

----------------------------------------------------------

	
sequential_3/batch_normalization_2/moving_mean/IsInitialized/VarIsInitializedOp:
name: "sequential_3/batch_normalization_2/moving_mean/IsInitialized/VarIsInitializedOp"
op: "VarIsInitializedOp"
input: "sequential_3/batch_normalization_2/moving_mean"

----------------------------------------------------------

	
sequential_3/batch_normalization_2/moving_mean/Assign:
name: "sequential_3/batch_normalization_2/moving_mean/Assign"
op: "AssignVariableOp"
input: "sequential_3/batch_normalization_2/moving_mean"
input: "sequential_3/batch_normalization_2/moving_mean/Initializer/zeros"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_3/batch_normalization_2/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_3/batch_normalization_2/moving_mean/Read/ReadVariableOp:
name: "sequential_3/batch_normalization_2/moving_mean/Read/ReadVariableOp"
op: "ReadVariableOp"
input: "sequential_3/batch_normalization_2/moving_mean"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_3/batch_normalization_2/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_3/batch_normalization_2/moving_variance/Initializer/ones:
name: "sequential_3/batch_normalization_2/moving_variance/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_3/batch_normalization_2/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 32
        }
      }
      float_val: 1.0
    }
  }
}

----------------------------------------------------------

	
sequential_3/batch_normalization_2/moving_variance:
name: "sequential_3/batch_normalization_2/moving_variance"
op: "VarHandleOp"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_3/batch_normalization_2/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 32
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: "sequential_3/batch_normalization_2/moving_variance"
  }
}

----------------------------------------------------------

	
sequential_3/batch_normalization_2/moving_variance/IsInitialized/VarIsInitializedOp:
name: "sequential_3/batch_normalization_2/moving_variance/IsInitialized/VarIsInitializedOp"
op: "VarIsInitializedOp"
input: "sequential_3/batch_normalization_2/moving_variance"

----------------------------------------------------------

	
sequential_3/batch_normalization_2/moving_variance/Assign:
name: "sequential_3/batch_normalization_2/moving_variance/Assign"
op: "AssignVariableOp"
input: "sequential_3/batch_normalization_2/moving_variance"
input: "sequential_3/batch_normalization_2/moving_variance/Initializer/ones"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_3/batch_normalization_2/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_3/batch_normalization_2/moving_variance/Read/ReadVariableOp:
name: "sequential_3/batch_normalization_2/moving_variance/Read/ReadVariableOp"
op: "ReadVariableOp"
input: "sequential_3/batch_normalization_2/moving_variance"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_3/batch_normalization_2/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_3/Conv2D/ReadVariableOp:
name: "sequential_3/Conv2D/ReadVariableOp"
op: "ReadVariableOp"
input: "sequential_3/conv2d_2/kernel"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_3/Conv2D:
name: "sequential_3/Conv2D"
op: "Conv2D"
input: "sequential_2/Relu"
input: "sequential_3/Conv2D/ReadVariableOp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

----------------------------------------------------------

	
sequential_3/BiasAdd/ReadVariableOp:
name: "sequential_3/BiasAdd/ReadVariableOp"
op: "ReadVariableOp"
input: "sequential_3/conv2d_2/bias"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_3/BiasAdd:
name: "sequential_3/BiasAdd"
op: "BiasAdd"
input: "sequential_3/Conv2D"
input: "sequential_3/BiasAdd/ReadVariableOp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

----------------------------------------------------------

	
sequential_3/cond/Switch:
name: "sequential_3/cond/Switch"
op: "Switch"
input: "sequential_1/keras_learning_phase"
input: "sequential_1/keras_learning_phase"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}

----------------------------------------------------------

	
sequential_3/cond/switch_t:
name: "sequential_3/cond/switch_t"
op: "Identity"
input: "sequential_3/cond/Switch:1"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}

----------------------------------------------------------

	
sequential_3/cond/switch_f:
name: "sequential_3/cond/switch_f"
op: "Identity"
input: "sequential_3/cond/Switch"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}

----------------------------------------------------------

	
sequential_3/cond/pred_id:
name: "sequential_3/cond/pred_id"
op: "Identity"
input: "sequential_1/keras_learning_phase"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}

----------------------------------------------------------

	
sequential_3/cond/ReadVariableOp:
name: "sequential_3/cond/ReadVariableOp"
op: "ReadVariableOp"
input: "sequential_3/cond/ReadVariableOp/Switch:1"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_3/cond/ReadVariableOp/Switch:
name: "sequential_3/cond/ReadVariableOp/Switch"
op: "Switch"
input: "sequential_3/batch_normalization_2/gamma"
input: "sequential_3/cond/pred_id"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_3/batch_normalization_2/gamma"
    }
  }
}

----------------------------------------------------------

	
sequential_3/cond/ReadVariableOp_1:
name: "sequential_3/cond/ReadVariableOp_1"
op: "ReadVariableOp"
input: "sequential_3/cond/ReadVariableOp_1/Switch:1"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_3/cond/ReadVariableOp_1/Switch:
name: "sequential_3/cond/ReadVariableOp_1/Switch"
op: "Switch"
input: "sequential_3/batch_normalization_2/beta"
input: "sequential_3/cond/pred_id"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_3/batch_normalization_2/beta"
    }
  }
}

----------------------------------------------------------

	
sequential_3/cond/Const:
name: "sequential_3/cond/Const"
op: "Const"
input: "^sequential_3/cond/switch_t"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

----------------------------------------------------------

	
sequential_3/cond/Const_1:
name: "sequential_3/cond/Const_1"
op: "Const"
input: "^sequential_3/cond/switch_t"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

----------------------------------------------------------

	
sequential_3/cond/FusedBatchNorm:
name: "sequential_3/cond/FusedBatchNorm"
op: "FusedBatchNorm"
input: "sequential_3/cond/FusedBatchNorm/Switch:1"
input: "sequential_3/cond/ReadVariableOp"
input: "sequential_3/cond/ReadVariableOp_1"
input: "sequential_3/cond/Const"
input: "sequential_3/cond/Const_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}

----------------------------------------------------------

	
sequential_3/cond/FusedBatchNorm/Switch:
name: "sequential_3/cond/FusedBatchNorm/Switch"
op: "Switch"
input: "sequential_3/BiasAdd"
input: "sequential_3/cond/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_3/BiasAdd"
    }
  }
}

----------------------------------------------------------

	
sequential_3/cond/ReadVariableOp_2:
name: "sequential_3/cond/ReadVariableOp_2"
op: "ReadVariableOp"
input: "sequential_3/cond/ReadVariableOp_2/Switch:0"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_3/cond/ReadVariableOp_2/Switch:
name: "sequential_3/cond/ReadVariableOp_2/Switch"
op: "Switch"
input: "sequential_3/batch_normalization_2/gamma"
input: "sequential_3/cond/pred_id"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_3/batch_normalization_2/gamma"
    }
  }
}

----------------------------------------------------------

	
sequential_3/cond/ReadVariableOp_3:
name: "sequential_3/cond/ReadVariableOp_3"
op: "ReadVariableOp"
input: "sequential_3/cond/ReadVariableOp_3/Switch:0"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_3/cond/ReadVariableOp_3/Switch:
name: "sequential_3/cond/ReadVariableOp_3/Switch"
op: "Switch"
input: "sequential_3/batch_normalization_2/beta"
input: "sequential_3/cond/pred_id"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_3/batch_normalization_2/beta"
    }
  }
}

----------------------------------------------------------

	
sequential_3/cond/FusedBatchNorm_1/ReadVariableOp:
name: "sequential_3/cond/FusedBatchNorm_1/ReadVariableOp"
op: "ReadVariableOp"
input: "sequential_3/cond/FusedBatchNorm_1/ReadVariableOp/Switch:0"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_3/cond/FusedBatchNorm_1/ReadVariableOp/Switch:
name: "sequential_3/cond/FusedBatchNorm_1/ReadVariableOp/Switch"
op: "Switch"
input: "sequential_3/batch_normalization_2/moving_mean"
input: "sequential_3/cond/pred_id"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_3/batch_normalization_2/moving_mean"
    }
  }
}

----------------------------------------------------------

	
sequential_3/cond/FusedBatchNorm_1/ReadVariableOp_1:
name: "sequential_3/cond/FusedBatchNorm_1/ReadVariableOp_1"
op: "ReadVariableOp"
input: "sequential_3/cond/FusedBatchNorm_1/ReadVariableOp_1/Switch:0"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_3/cond/FusedBatchNorm_1/ReadVariableOp_1/Switch:
name: "sequential_3/cond/FusedBatchNorm_1/ReadVariableOp_1/Switch"
op: "Switch"
input: "sequential_3/batch_normalization_2/moving_variance"
input: "sequential_3/cond/pred_id"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_3/batch_normalization_2/moving_variance"
    }
  }
}

----------------------------------------------------------

	
sequential_3/cond/FusedBatchNorm_1:
name: "sequential_3/cond/FusedBatchNorm_1"
op: "FusedBatchNorm"
input: "sequential_3/cond/FusedBatchNorm_1/Switch:0"
input: "sequential_3/cond/ReadVariableOp_2"
input: "sequential_3/cond/ReadVariableOp_3"
input: "sequential_3/cond/FusedBatchNorm_1/ReadVariableOp"
input: "sequential_3/cond/FusedBatchNorm_1/ReadVariableOp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: false
  }
}

----------------------------------------------------------

	
sequential_3/cond/FusedBatchNorm_1/Switch:
name: "sequential_3/cond/FusedBatchNorm_1/Switch"
op: "Switch"
input: "sequential_3/BiasAdd"
input: "sequential_3/cond/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_3/BiasAdd"
    }
  }
}

----------------------------------------------------------

	
sequential_3/cond/Merge:
name: "sequential_3/cond/Merge"
op: "Merge"
input: "sequential_3/cond/FusedBatchNorm_1"
input: "sequential_3/cond/FusedBatchNorm"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_3/cond/Merge_1:
name: "sequential_3/cond/Merge_1"
op: "Merge"
input: "sequential_3/cond/FusedBatchNorm_1:1"
input: "sequential_3/cond/FusedBatchNorm:1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_3/cond/Merge_2:
name: "sequential_3/cond/Merge_2"
op: "Merge"
input: "sequential_3/cond/FusedBatchNorm_1:2"
input: "sequential_3/cond/FusedBatchNorm:2"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_3/cond_1/Switch:
name: "sequential_3/cond_1/Switch"
op: "Switch"
input: "sequential_1/keras_learning_phase"
input: "sequential_1/keras_learning_phase"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}

----------------------------------------------------------

	
sequential_3/cond_1/switch_t:
name: "sequential_3/cond_1/switch_t"
op: "Identity"
input: "sequential_3/cond_1/Switch:1"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}

----------------------------------------------------------

	
sequential_3/cond_1/switch_f:
name: "sequential_3/cond_1/switch_f"
op: "Identity"
input: "sequential_3/cond_1/Switch"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}

----------------------------------------------------------

	
sequential_3/cond_1/pred_id:
name: "sequential_3/cond_1/pred_id"
op: "Identity"
input: "sequential_1/keras_learning_phase"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}

----------------------------------------------------------

	
sequential_3/cond_1/Const:
name: "sequential_3/cond_1/Const"
op: "Const"
input: "^sequential_3/cond_1/switch_t"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.9900000095367432
    }
  }
}

----------------------------------------------------------

	
sequential_3/cond_1/Const_1:
name: "sequential_3/cond_1/Const_1"
op: "Const"
input: "^sequential_3/cond_1/switch_f"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

----------------------------------------------------------

	
sequential_3/cond_1/Merge:
name: "sequential_3/cond_1/Merge"
op: "Merge"
input: "sequential_3/cond_1/Const_1"
input: "sequential_3/cond_1/Const"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_3/AssignMovingAvg/Read/ReadVariableOp:
name: "sequential_3/AssignMovingAvg/Read/ReadVariableOp"
op: "ReadVariableOp"
input: "sequential_3/batch_normalization_2/moving_mean"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_3/AssignMovingAvg/Identity:
name: "sequential_3/AssignMovingAvg/Identity"
op: "Identity"
input: "sequential_3/AssignMovingAvg/Read/ReadVariableOp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_3/AssignMovingAvg/sub/x:
name: "sequential_3/AssignMovingAvg/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_3/AssignMovingAvg/Read/ReadVariableOp"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

----------------------------------------------------------

	
sequential_3/AssignMovingAvg/sub:
name: "sequential_3/AssignMovingAvg/sub"
op: "Sub"
input: "sequential_3/AssignMovingAvg/sub/x"
input: "sequential_3/cond_1/Merge"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_3/AssignMovingAvg/Read/ReadVariableOp"
    }
  }
}

----------------------------------------------------------

	
sequential_3/AssignMovingAvg/ReadVariableOp:
name: "sequential_3/AssignMovingAvg/ReadVariableOp"
op: "ReadVariableOp"
input: "sequential_3/batch_normalization_2/moving_mean"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_3/AssignMovingAvg/sub_1:
name: "sequential_3/AssignMovingAvg/sub_1"
op: "Sub"
input: "sequential_3/AssignMovingAvg/ReadVariableOp"
input: "sequential_3/cond/Merge_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_3/AssignMovingAvg/Read/ReadVariableOp"
    }
  }
}

----------------------------------------------------------

	
sequential_3/AssignMovingAvg/mul:
name: "sequential_3/AssignMovingAvg/mul"
op: "Mul"
input: "sequential_3/AssignMovingAvg/sub_1"
input: "sequential_3/AssignMovingAvg/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_3/AssignMovingAvg/Read/ReadVariableOp"
    }
  }
}

----------------------------------------------------------

	
sequential_3/AssignMovingAvg/AssignSubVariableOp:
name: "sequential_3/AssignMovingAvg/AssignSubVariableOp"
op: "AssignSubVariableOp"
input: "sequential_3/batch_normalization_2/moving_mean"
input: "sequential_3/AssignMovingAvg/mul"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_3/AssignMovingAvg/Read/ReadVariableOp"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_3/AssignMovingAvg/ReadVariableOp_1:
name: "sequential_3/AssignMovingAvg/ReadVariableOp_1"
op: "ReadVariableOp"
input: "sequential_3/batch_normalization_2/moving_mean"
input: "^sequential_3/AssignMovingAvg/AssignSubVariableOp"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_3/AssignMovingAvg/Read/ReadVariableOp"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_3/AssignMovingAvg_1/Read/ReadVariableOp:
name: "sequential_3/AssignMovingAvg_1/Read/ReadVariableOp"
op: "ReadVariableOp"
input: "sequential_3/batch_normalization_2/moving_variance"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_3/AssignMovingAvg_1/Identity:
name: "sequential_3/AssignMovingAvg_1/Identity"
op: "Identity"
input: "sequential_3/AssignMovingAvg_1/Read/ReadVariableOp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_3/AssignMovingAvg_1/sub/x:
name: "sequential_3/AssignMovingAvg_1/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_3/AssignMovingAvg_1/Read/ReadVariableOp"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

----------------------------------------------------------

	
sequential_3/AssignMovingAvg_1/sub:
name: "sequential_3/AssignMovingAvg_1/sub"
op: "Sub"
input: "sequential_3/AssignMovingAvg_1/sub/x"
input: "sequential_3/cond_1/Merge"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_3/AssignMovingAvg_1/Read/ReadVariableOp"
    }
  }
}

----------------------------------------------------------

	
sequential_3/AssignMovingAvg_1/ReadVariableOp:
name: "sequential_3/AssignMovingAvg_1/ReadVariableOp"
op: "ReadVariableOp"
input: "sequential_3/batch_normalization_2/moving_variance"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_3/AssignMovingAvg_1/sub_1:
name: "sequential_3/AssignMovingAvg_1/sub_1"
op: "Sub"
input: "sequential_3/AssignMovingAvg_1/ReadVariableOp"
input: "sequential_3/cond/Merge_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_3/AssignMovingAvg_1/Read/ReadVariableOp"
    }
  }
}

----------------------------------------------------------

	
sequential_3/AssignMovingAvg_1/mul:
name: "sequential_3/AssignMovingAvg_1/mul"
op: "Mul"
input: "sequential_3/AssignMovingAvg_1/sub_1"
input: "sequential_3/AssignMovingAvg_1/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_3/AssignMovingAvg_1/Read/ReadVariableOp"
    }
  }
}

----------------------------------------------------------

	
sequential_3/AssignMovingAvg_1/AssignSubVariableOp:
name: "sequential_3/AssignMovingAvg_1/AssignSubVariableOp"
op: "AssignSubVariableOp"
input: "sequential_3/batch_normalization_2/moving_variance"
input: "sequential_3/AssignMovingAvg_1/mul"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_3/AssignMovingAvg_1/Read/ReadVariableOp"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_3/AssignMovingAvg_1/ReadVariableOp_1:
name: "sequential_3/AssignMovingAvg_1/ReadVariableOp_1"
op: "ReadVariableOp"
input: "sequential_3/batch_normalization_2/moving_variance"
input: "^sequential_3/AssignMovingAvg_1/AssignSubVariableOp"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_3/AssignMovingAvg_1/Read/ReadVariableOp"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_3/Relu:
name: "sequential_3/Relu"
op: "Relu"
input: "sequential_3/cond/Merge"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_4/conv2d_3/kernel/Initializer/random_uniform/shape:
name: "sequential_4/conv2d_3/kernel/Initializer/random_uniform/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_4/conv2d_3/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
    }
  }
}

----------------------------------------------------------

	
sequential_4/conv2d_3/kernel/Initializer/random_uniform/min:
name: "sequential_4/conv2d_3/kernel/Initializer/random_uniform/min"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_4/conv2d_3/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: -0.10206207633018494
    }
  }
}

----------------------------------------------------------

	
sequential_4/conv2d_3/kernel/Initializer/random_uniform/max:
name: "sequential_4/conv2d_3/kernel/Initializer/random_uniform/max"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_4/conv2d_3/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.10206207633018494
    }
  }
}

----------------------------------------------------------

	
sequential_4/conv2d_3/kernel/Initializer/random_uniform/RandomUniform:
name: "sequential_4/conv2d_3/kernel/Initializer/random_uniform/RandomUniform"
op: "RandomUniform"
input: "sequential_4/conv2d_3/kernel/Initializer/random_uniform/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_4/conv2d_3/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

----------------------------------------------------------

	
sequential_4/conv2d_3/kernel/Initializer/random_uniform/sub:
name: "sequential_4/conv2d_3/kernel/Initializer/random_uniform/sub"
op: "Sub"
input: "sequential_4/conv2d_3/kernel/Initializer/random_uniform/max"
input: "sequential_4/conv2d_3/kernel/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_4/conv2d_3/kernel"
    }
  }
}

----------------------------------------------------------

	
sequential_4/conv2d_3/kernel/Initializer/random_uniform/mul:
name: "sequential_4/conv2d_3/kernel/Initializer/random_uniform/mul"
op: "Mul"
input: "sequential_4/conv2d_3/kernel/Initializer/random_uniform/RandomUniform"
input: "sequential_4/conv2d_3/kernel/Initializer/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_4/conv2d_3/kernel"
    }
  }
}

----------------------------------------------------------

	
sequential_4/conv2d_3/kernel/Initializer/random_uniform:
name: "sequential_4/conv2d_3/kernel/Initializer/random_uniform"
op: "Add"
input: "sequential_4/conv2d_3/kernel/Initializer/random_uniform/mul"
input: "sequential_4/conv2d_3/kernel/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_4/conv2d_3/kernel"
    }
  }
}

----------------------------------------------------------

	
sequential_4/conv2d_3/kernel:
name: "sequential_4/conv2d_3/kernel"
op: "VarHandleOp"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_4/conv2d_3/kernel"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 32
      }
      dim {
        size: 32
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: "sequential_4/conv2d_3/kernel"
  }
}

----------------------------------------------------------

	
sequential_4/conv2d_3/kernel/IsInitialized/VarIsInitializedOp:
name: "sequential_4/conv2d_3/kernel/IsInitialized/VarIsInitializedOp"
op: "VarIsInitializedOp"
input: "sequential_4/conv2d_3/kernel"

----------------------------------------------------------

	
sequential_4/conv2d_3/kernel/Assign:
name: "sequential_4/conv2d_3/kernel/Assign"
op: "AssignVariableOp"
input: "sequential_4/conv2d_3/kernel"
input: "sequential_4/conv2d_3/kernel/Initializer/random_uniform"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_4/conv2d_3/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_4/conv2d_3/kernel/Read/ReadVariableOp:
name: "sequential_4/conv2d_3/kernel/Read/ReadVariableOp"
op: "ReadVariableOp"
input: "sequential_4/conv2d_3/kernel"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_4/conv2d_3/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_4/conv2d_3/bias/Initializer/zeros:
name: "sequential_4/conv2d_3/bias/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_4/conv2d_3/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 32
        }
      }
      float_val: 0.0
    }
  }
}

----------------------------------------------------------

	
sequential_4/conv2d_3/bias:
name: "sequential_4/conv2d_3/bias"
op: "VarHandleOp"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_4/conv2d_3/bias"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 32
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: "sequential_4/conv2d_3/bias"
  }
}

----------------------------------------------------------

	
sequential_4/conv2d_3/bias/IsInitialized/VarIsInitializedOp:
name: "sequential_4/conv2d_3/bias/IsInitialized/VarIsInitializedOp"
op: "VarIsInitializedOp"
input: "sequential_4/conv2d_3/bias"

----------------------------------------------------------

	
sequential_4/conv2d_3/bias/Assign:
name: "sequential_4/conv2d_3/bias/Assign"
op: "AssignVariableOp"
input: "sequential_4/conv2d_3/bias"
input: "sequential_4/conv2d_3/bias/Initializer/zeros"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_4/conv2d_3/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_4/conv2d_3/bias/Read/ReadVariableOp:
name: "sequential_4/conv2d_3/bias/Read/ReadVariableOp"
op: "ReadVariableOp"
input: "sequential_4/conv2d_3/bias"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_4/conv2d_3/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_4/conv2d_3/dilation_rate:
name: "sequential_4/conv2d_3/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}

----------------------------------------------------------

	
sequential_4/batch_normalization_3/gamma/Initializer/ones:
name: "sequential_4/batch_normalization_3/gamma/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_4/batch_normalization_3/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 32
        }
      }
      float_val: 1.0
    }
  }
}

----------------------------------------------------------

	
sequential_4/batch_normalization_3/gamma:
name: "sequential_4/batch_normalization_3/gamma"
op: "VarHandleOp"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_4/batch_normalization_3/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 32
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: "sequential_4/batch_normalization_3/gamma"
  }
}

----------------------------------------------------------

	
sequential_4/batch_normalization_3/gamma/IsInitialized/VarIsInitializedOp:
name: "sequential_4/batch_normalization_3/gamma/IsInitialized/VarIsInitializedOp"
op: "VarIsInitializedOp"
input: "sequential_4/batch_normalization_3/gamma"

----------------------------------------------------------

	
sequential_4/batch_normalization_3/gamma/Assign:
name: "sequential_4/batch_normalization_3/gamma/Assign"
op: "AssignVariableOp"
input: "sequential_4/batch_normalization_3/gamma"
input: "sequential_4/batch_normalization_3/gamma/Initializer/ones"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_4/batch_normalization_3/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_4/batch_normalization_3/gamma/Read/ReadVariableOp:
name: "sequential_4/batch_normalization_3/gamma/Read/ReadVariableOp"
op: "ReadVariableOp"
input: "sequential_4/batch_normalization_3/gamma"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_4/batch_normalization_3/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_4/batch_normalization_3/beta/Initializer/zeros:
name: "sequential_4/batch_normalization_3/beta/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_4/batch_normalization_3/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 32
        }
      }
      float_val: 0.0
    }
  }
}

----------------------------------------------------------

	
sequential_4/batch_normalization_3/beta:
name: "sequential_4/batch_normalization_3/beta"
op: "VarHandleOp"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_4/batch_normalization_3/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 32
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: "sequential_4/batch_normalization_3/beta"
  }
}

----------------------------------------------------------

	
sequential_4/batch_normalization_3/beta/IsInitialized/VarIsInitializedOp:
name: "sequential_4/batch_normalization_3/beta/IsInitialized/VarIsInitializedOp"
op: "VarIsInitializedOp"
input: "sequential_4/batch_normalization_3/beta"

----------------------------------------------------------

	
sequential_4/batch_normalization_3/beta/Assign:
name: "sequential_4/batch_normalization_3/beta/Assign"
op: "AssignVariableOp"
input: "sequential_4/batch_normalization_3/beta"
input: "sequential_4/batch_normalization_3/beta/Initializer/zeros"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_4/batch_normalization_3/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_4/batch_normalization_3/beta/Read/ReadVariableOp:
name: "sequential_4/batch_normalization_3/beta/Read/ReadVariableOp"
op: "ReadVariableOp"
input: "sequential_4/batch_normalization_3/beta"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_4/batch_normalization_3/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_4/batch_normalization_3/moving_mean/Initializer/zeros:
name: "sequential_4/batch_normalization_3/moving_mean/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_4/batch_normalization_3/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 32
        }
      }
      float_val: 0.0
    }
  }
}

----------------------------------------------------------

	
sequential_4/batch_normalization_3/moving_mean:
name: "sequential_4/batch_normalization_3/moving_mean"
op: "VarHandleOp"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_4/batch_normalization_3/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 32
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: "sequential_4/batch_normalization_3/moving_mean"
  }
}

----------------------------------------------------------

	
sequential_4/batch_normalization_3/moving_mean/IsInitialized/VarIsInitializedOp:
name: "sequential_4/batch_normalization_3/moving_mean/IsInitialized/VarIsInitializedOp"
op: "VarIsInitializedOp"
input: "sequential_4/batch_normalization_3/moving_mean"

----------------------------------------------------------

	
sequential_4/batch_normalization_3/moving_mean/Assign:
name: "sequential_4/batch_normalization_3/moving_mean/Assign"
op: "AssignVariableOp"
input: "sequential_4/batch_normalization_3/moving_mean"
input: "sequential_4/batch_normalization_3/moving_mean/Initializer/zeros"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_4/batch_normalization_3/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_4/batch_normalization_3/moving_mean/Read/ReadVariableOp:
name: "sequential_4/batch_normalization_3/moving_mean/Read/ReadVariableOp"
op: "ReadVariableOp"
input: "sequential_4/batch_normalization_3/moving_mean"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_4/batch_normalization_3/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_4/batch_normalization_3/moving_variance/Initializer/ones:
name: "sequential_4/batch_normalization_3/moving_variance/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_4/batch_normalization_3/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 32
        }
      }
      float_val: 1.0
    }
  }
}

----------------------------------------------------------

	
sequential_4/batch_normalization_3/moving_variance:
name: "sequential_4/batch_normalization_3/moving_variance"
op: "VarHandleOp"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_4/batch_normalization_3/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 32
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: "sequential_4/batch_normalization_3/moving_variance"
  }
}

----------------------------------------------------------

	
sequential_4/batch_normalization_3/moving_variance/IsInitialized/VarIsInitializedOp:
name: "sequential_4/batch_normalization_3/moving_variance/IsInitialized/VarIsInitializedOp"
op: "VarIsInitializedOp"
input: "sequential_4/batch_normalization_3/moving_variance"

----------------------------------------------------------

	
sequential_4/batch_normalization_3/moving_variance/Assign:
name: "sequential_4/batch_normalization_3/moving_variance/Assign"
op: "AssignVariableOp"
input: "sequential_4/batch_normalization_3/moving_variance"
input: "sequential_4/batch_normalization_3/moving_variance/Initializer/ones"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_4/batch_normalization_3/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_4/batch_normalization_3/moving_variance/Read/ReadVariableOp:
name: "sequential_4/batch_normalization_3/moving_variance/Read/ReadVariableOp"
op: "ReadVariableOp"
input: "sequential_4/batch_normalization_3/moving_variance"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_4/batch_normalization_3/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_4/Conv2D/ReadVariableOp:
name: "sequential_4/Conv2D/ReadVariableOp"
op: "ReadVariableOp"
input: "sequential_4/conv2d_3/kernel"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_4/Conv2D:
name: "sequential_4/Conv2D"
op: "Conv2D"
input: "sequential_3/Relu"
input: "sequential_4/Conv2D/ReadVariableOp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

----------------------------------------------------------

	
sequential_4/BiasAdd/ReadVariableOp:
name: "sequential_4/BiasAdd/ReadVariableOp"
op: "ReadVariableOp"
input: "sequential_4/conv2d_3/bias"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_4/BiasAdd:
name: "sequential_4/BiasAdd"
op: "BiasAdd"
input: "sequential_4/Conv2D"
input: "sequential_4/BiasAdd/ReadVariableOp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

----------------------------------------------------------

	
sequential_4/cond/Switch:
name: "sequential_4/cond/Switch"
op: "Switch"
input: "sequential_1/keras_learning_phase"
input: "sequential_1/keras_learning_phase"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}

----------------------------------------------------------

	
sequential_4/cond/switch_t:
name: "sequential_4/cond/switch_t"
op: "Identity"
input: "sequential_4/cond/Switch:1"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}

----------------------------------------------------------

	
sequential_4/cond/switch_f:
name: "sequential_4/cond/switch_f"
op: "Identity"
input: "sequential_4/cond/Switch"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}

----------------------------------------------------------

	
sequential_4/cond/pred_id:
name: "sequential_4/cond/pred_id"
op: "Identity"
input: "sequential_1/keras_learning_phase"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}

----------------------------------------------------------

	
sequential_4/cond/ReadVariableOp:
name: "sequential_4/cond/ReadVariableOp"
op: "ReadVariableOp"
input: "sequential_4/cond/ReadVariableOp/Switch:1"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_4/cond/ReadVariableOp/Switch:
name: "sequential_4/cond/ReadVariableOp/Switch"
op: "Switch"
input: "sequential_4/batch_normalization_3/gamma"
input: "sequential_4/cond/pred_id"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_4/batch_normalization_3/gamma"
    }
  }
}

----------------------------------------------------------

	
sequential_4/cond/ReadVariableOp_1:
name: "sequential_4/cond/ReadVariableOp_1"
op: "ReadVariableOp"
input: "sequential_4/cond/ReadVariableOp_1/Switch:1"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_4/cond/ReadVariableOp_1/Switch:
name: "sequential_4/cond/ReadVariableOp_1/Switch"
op: "Switch"
input: "sequential_4/batch_normalization_3/beta"
input: "sequential_4/cond/pred_id"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_4/batch_normalization_3/beta"
    }
  }
}

----------------------------------------------------------

	
sequential_4/cond/Const:
name: "sequential_4/cond/Const"
op: "Const"
input: "^sequential_4/cond/switch_t"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

----------------------------------------------------------

	
sequential_4/cond/Const_1:
name: "sequential_4/cond/Const_1"
op: "Const"
input: "^sequential_4/cond/switch_t"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

----------------------------------------------------------

	
sequential_4/cond/FusedBatchNorm:
name: "sequential_4/cond/FusedBatchNorm"
op: "FusedBatchNorm"
input: "sequential_4/cond/FusedBatchNorm/Switch:1"
input: "sequential_4/cond/ReadVariableOp"
input: "sequential_4/cond/ReadVariableOp_1"
input: "sequential_4/cond/Const"
input: "sequential_4/cond/Const_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}

----------------------------------------------------------

	
sequential_4/cond/FusedBatchNorm/Switch:
name: "sequential_4/cond/FusedBatchNorm/Switch"
op: "Switch"
input: "sequential_4/BiasAdd"
input: "sequential_4/cond/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_4/BiasAdd"
    }
  }
}

----------------------------------------------------------

	
sequential_4/cond/ReadVariableOp_2:
name: "sequential_4/cond/ReadVariableOp_2"
op: "ReadVariableOp"
input: "sequential_4/cond/ReadVariableOp_2/Switch:0"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_4/cond/ReadVariableOp_2/Switch:
name: "sequential_4/cond/ReadVariableOp_2/Switch"
op: "Switch"
input: "sequential_4/batch_normalization_3/gamma"
input: "sequential_4/cond/pred_id"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_4/batch_normalization_3/gamma"
    }
  }
}

----------------------------------------------------------

	
sequential_4/cond/ReadVariableOp_3:
name: "sequential_4/cond/ReadVariableOp_3"
op: "ReadVariableOp"
input: "sequential_4/cond/ReadVariableOp_3/Switch:0"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_4/cond/ReadVariableOp_3/Switch:
name: "sequential_4/cond/ReadVariableOp_3/Switch"
op: "Switch"
input: "sequential_4/batch_normalization_3/beta"
input: "sequential_4/cond/pred_id"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_4/batch_normalization_3/beta"
    }
  }
}

----------------------------------------------------------

	
sequential_4/cond/FusedBatchNorm_1/ReadVariableOp:
name: "sequential_4/cond/FusedBatchNorm_1/ReadVariableOp"
op: "ReadVariableOp"
input: "sequential_4/cond/FusedBatchNorm_1/ReadVariableOp/Switch:0"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_4/cond/FusedBatchNorm_1/ReadVariableOp/Switch:
name: "sequential_4/cond/FusedBatchNorm_1/ReadVariableOp/Switch"
op: "Switch"
input: "sequential_4/batch_normalization_3/moving_mean"
input: "sequential_4/cond/pred_id"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_4/batch_normalization_3/moving_mean"
    }
  }
}

----------------------------------------------------------

	
sequential_4/cond/FusedBatchNorm_1/ReadVariableOp_1:
name: "sequential_4/cond/FusedBatchNorm_1/ReadVariableOp_1"
op: "ReadVariableOp"
input: "sequential_4/cond/FusedBatchNorm_1/ReadVariableOp_1/Switch:0"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_4/cond/FusedBatchNorm_1/ReadVariableOp_1/Switch:
name: "sequential_4/cond/FusedBatchNorm_1/ReadVariableOp_1/Switch"
op: "Switch"
input: "sequential_4/batch_normalization_3/moving_variance"
input: "sequential_4/cond/pred_id"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_4/batch_normalization_3/moving_variance"
    }
  }
}

----------------------------------------------------------

	
sequential_4/cond/FusedBatchNorm_1:
name: "sequential_4/cond/FusedBatchNorm_1"
op: "FusedBatchNorm"
input: "sequential_4/cond/FusedBatchNorm_1/Switch:0"
input: "sequential_4/cond/ReadVariableOp_2"
input: "sequential_4/cond/ReadVariableOp_3"
input: "sequential_4/cond/FusedBatchNorm_1/ReadVariableOp"
input: "sequential_4/cond/FusedBatchNorm_1/ReadVariableOp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: false
  }
}

----------------------------------------------------------

	
sequential_4/cond/FusedBatchNorm_1/Switch:
name: "sequential_4/cond/FusedBatchNorm_1/Switch"
op: "Switch"
input: "sequential_4/BiasAdd"
input: "sequential_4/cond/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_4/BiasAdd"
    }
  }
}

----------------------------------------------------------

	
sequential_4/cond/Merge:
name: "sequential_4/cond/Merge"
op: "Merge"
input: "sequential_4/cond/FusedBatchNorm_1"
input: "sequential_4/cond/FusedBatchNorm"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_4/cond/Merge_1:
name: "sequential_4/cond/Merge_1"
op: "Merge"
input: "sequential_4/cond/FusedBatchNorm_1:1"
input: "sequential_4/cond/FusedBatchNorm:1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_4/cond/Merge_2:
name: "sequential_4/cond/Merge_2"
op: "Merge"
input: "sequential_4/cond/FusedBatchNorm_1:2"
input: "sequential_4/cond/FusedBatchNorm:2"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_4/cond_1/Switch:
name: "sequential_4/cond_1/Switch"
op: "Switch"
input: "sequential_1/keras_learning_phase"
input: "sequential_1/keras_learning_phase"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}

----------------------------------------------------------

	
sequential_4/cond_1/switch_t:
name: "sequential_4/cond_1/switch_t"
op: "Identity"
input: "sequential_4/cond_1/Switch:1"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}

----------------------------------------------------------

	
sequential_4/cond_1/switch_f:
name: "sequential_4/cond_1/switch_f"
op: "Identity"
input: "sequential_4/cond_1/Switch"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}

----------------------------------------------------------

	
sequential_4/cond_1/pred_id:
name: "sequential_4/cond_1/pred_id"
op: "Identity"
input: "sequential_1/keras_learning_phase"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}

----------------------------------------------------------

	
sequential_4/cond_1/Const:
name: "sequential_4/cond_1/Const"
op: "Const"
input: "^sequential_4/cond_1/switch_t"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.9900000095367432
    }
  }
}

----------------------------------------------------------

	
sequential_4/cond_1/Const_1:
name: "sequential_4/cond_1/Const_1"
op: "Const"
input: "^sequential_4/cond_1/switch_f"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

----------------------------------------------------------

	
sequential_4/cond_1/Merge:
name: "sequential_4/cond_1/Merge"
op: "Merge"
input: "sequential_4/cond_1/Const_1"
input: "sequential_4/cond_1/Const"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_4/AssignMovingAvg/Read/ReadVariableOp:
name: "sequential_4/AssignMovingAvg/Read/ReadVariableOp"
op: "ReadVariableOp"
input: "sequential_4/batch_normalization_3/moving_mean"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_4/AssignMovingAvg/Identity:
name: "sequential_4/AssignMovingAvg/Identity"
op: "Identity"
input: "sequential_4/AssignMovingAvg/Read/ReadVariableOp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_4/AssignMovingAvg/sub/x:
name: "sequential_4/AssignMovingAvg/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_4/AssignMovingAvg/Read/ReadVariableOp"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

----------------------------------------------------------

	
sequential_4/AssignMovingAvg/sub:
name: "sequential_4/AssignMovingAvg/sub"
op: "Sub"
input: "sequential_4/AssignMovingAvg/sub/x"
input: "sequential_4/cond_1/Merge"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_4/AssignMovingAvg/Read/ReadVariableOp"
    }
  }
}

----------------------------------------------------------

	
sequential_4/AssignMovingAvg/ReadVariableOp:
name: "sequential_4/AssignMovingAvg/ReadVariableOp"
op: "ReadVariableOp"
input: "sequential_4/batch_normalization_3/moving_mean"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_4/AssignMovingAvg/sub_1:
name: "sequential_4/AssignMovingAvg/sub_1"
op: "Sub"
input: "sequential_4/AssignMovingAvg/ReadVariableOp"
input: "sequential_4/cond/Merge_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_4/AssignMovingAvg/Read/ReadVariableOp"
    }
  }
}

----------------------------------------------------------

	
sequential_4/AssignMovingAvg/mul:
name: "sequential_4/AssignMovingAvg/mul"
op: "Mul"
input: "sequential_4/AssignMovingAvg/sub_1"
input: "sequential_4/AssignMovingAvg/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_4/AssignMovingAvg/Read/ReadVariableOp"
    }
  }
}

----------------------------------------------------------

	
sequential_4/AssignMovingAvg/AssignSubVariableOp:
name: "sequential_4/AssignMovingAvg/AssignSubVariableOp"
op: "AssignSubVariableOp"
input: "sequential_4/batch_normalization_3/moving_mean"
input: "sequential_4/AssignMovingAvg/mul"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_4/AssignMovingAvg/Read/ReadVariableOp"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_4/AssignMovingAvg/ReadVariableOp_1:
name: "sequential_4/AssignMovingAvg/ReadVariableOp_1"
op: "ReadVariableOp"
input: "sequential_4/batch_normalization_3/moving_mean"
input: "^sequential_4/AssignMovingAvg/AssignSubVariableOp"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_4/AssignMovingAvg/Read/ReadVariableOp"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_4/AssignMovingAvg_1/Read/ReadVariableOp:
name: "sequential_4/AssignMovingAvg_1/Read/ReadVariableOp"
op: "ReadVariableOp"
input: "sequential_4/batch_normalization_3/moving_variance"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_4/AssignMovingAvg_1/Identity:
name: "sequential_4/AssignMovingAvg_1/Identity"
op: "Identity"
input: "sequential_4/AssignMovingAvg_1/Read/ReadVariableOp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_4/AssignMovingAvg_1/sub/x:
name: "sequential_4/AssignMovingAvg_1/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_4/AssignMovingAvg_1/Read/ReadVariableOp"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

----------------------------------------------------------

	
sequential_4/AssignMovingAvg_1/sub:
name: "sequential_4/AssignMovingAvg_1/sub"
op: "Sub"
input: "sequential_4/AssignMovingAvg_1/sub/x"
input: "sequential_4/cond_1/Merge"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_4/AssignMovingAvg_1/Read/ReadVariableOp"
    }
  }
}

----------------------------------------------------------

	
sequential_4/AssignMovingAvg_1/ReadVariableOp:
name: "sequential_4/AssignMovingAvg_1/ReadVariableOp"
op: "ReadVariableOp"
input: "sequential_4/batch_normalization_3/moving_variance"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_4/AssignMovingAvg_1/sub_1:
name: "sequential_4/AssignMovingAvg_1/sub_1"
op: "Sub"
input: "sequential_4/AssignMovingAvg_1/ReadVariableOp"
input: "sequential_4/cond/Merge_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_4/AssignMovingAvg_1/Read/ReadVariableOp"
    }
  }
}

----------------------------------------------------------

	
sequential_4/AssignMovingAvg_1/mul:
name: "sequential_4/AssignMovingAvg_1/mul"
op: "Mul"
input: "sequential_4/AssignMovingAvg_1/sub_1"
input: "sequential_4/AssignMovingAvg_1/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_4/AssignMovingAvg_1/Read/ReadVariableOp"
    }
  }
}

----------------------------------------------------------

	
sequential_4/AssignMovingAvg_1/AssignSubVariableOp:
name: "sequential_4/AssignMovingAvg_1/AssignSubVariableOp"
op: "AssignSubVariableOp"
input: "sequential_4/batch_normalization_3/moving_variance"
input: "sequential_4/AssignMovingAvg_1/mul"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_4/AssignMovingAvg_1/Read/ReadVariableOp"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_4/AssignMovingAvg_1/ReadVariableOp_1:
name: "sequential_4/AssignMovingAvg_1/ReadVariableOp_1"
op: "ReadVariableOp"
input: "sequential_4/batch_normalization_3/moving_variance"
input: "^sequential_4/AssignMovingAvg_1/AssignSubVariableOp"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@sequential_4/AssignMovingAvg_1/Read/ReadVariableOp"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
sequential_4/Relu:
name: "sequential_4/Relu"
op: "Relu"
input: "sequential_4/cond/Merge"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
dense/kernel/Initializer/random_uniform/shape:
name: "dense/kernel/Initializer/random_uniform/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: " \000\000\000\350\003\000\000"
    }
  }
}

----------------------------------------------------------

	
dense/kernel/Initializer/random_uniform/min:
name: "dense/kernel/Initializer/random_uniform/min"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: -0.07624928653240204
    }
  }
}

----------------------------------------------------------

	
dense/kernel/Initializer/random_uniform/max:
name: "dense/kernel/Initializer/random_uniform/max"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.07624928653240204
    }
  }
}

----------------------------------------------------------

	
dense/kernel/Initializer/random_uniform/RandomUniform:
name: "dense/kernel/Initializer/random_uniform/RandomUniform"
op: "RandomUniform"
input: "dense/kernel/Initializer/random_uniform/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

----------------------------------------------------------

	
dense/kernel/Initializer/random_uniform/sub:
name: "dense/kernel/Initializer/random_uniform/sub"
op: "Sub"
input: "dense/kernel/Initializer/random_uniform/max"
input: "dense/kernel/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/kernel"
    }
  }
}

----------------------------------------------------------

	
dense/kernel/Initializer/random_uniform/mul:
name: "dense/kernel/Initializer/random_uniform/mul"
op: "Mul"
input: "dense/kernel/Initializer/random_uniform/RandomUniform"
input: "dense/kernel/Initializer/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/kernel"
    }
  }
}

----------------------------------------------------------

	
dense/kernel/Initializer/random_uniform:
name: "dense/kernel/Initializer/random_uniform"
op: "Add"
input: "dense/kernel/Initializer/random_uniform/mul"
input: "dense/kernel/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/kernel"
    }
  }
}

----------------------------------------------------------

	
dense/kernel:
name: "dense/kernel"
op: "VarHandleOp"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/kernel"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 32
      }
      dim {
        size: 1000
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: "dense/kernel"
  }
}

----------------------------------------------------------

	
dense/kernel/IsInitialized/VarIsInitializedOp:
name: "dense/kernel/IsInitialized/VarIsInitializedOp"
op: "VarIsInitializedOp"
input: "dense/kernel"

----------------------------------------------------------

	
dense/kernel/Assign:
name: "dense/kernel/Assign"
op: "AssignVariableOp"
input: "dense/kernel"
input: "dense/kernel/Initializer/random_uniform"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
dense/kernel/Read/ReadVariableOp:
name: "dense/kernel/Read/ReadVariableOp"
op: "ReadVariableOp"
input: "dense/kernel"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
dense/bias/Initializer/zeros/shape_as_tensor:
name: "dense/bias/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1000
    }
  }
}

----------------------------------------------------------

	
dense/bias/Initializer/zeros/Const:
name: "dense/bias/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

----------------------------------------------------------

	
dense/bias/Initializer/zeros:
name: "dense/bias/Initializer/zeros"
op: "Fill"
input: "dense/bias/Initializer/zeros/shape_as_tensor"
input: "dense/bias/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/bias"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

----------------------------------------------------------

	
dense/bias:
name: "dense/bias"
op: "VarHandleOp"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/bias"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1000
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: "dense/bias"
  }
}

----------------------------------------------------------

	
dense/bias/IsInitialized/VarIsInitializedOp:
name: "dense/bias/IsInitialized/VarIsInitializedOp"
op: "VarIsInitializedOp"
input: "dense/bias"

----------------------------------------------------------

	
dense/bias/Assign:
name: "dense/bias/Assign"
op: "AssignVariableOp"
input: "dense/bias"
input: "dense/bias/Initializer/zeros"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
dense/bias/Read/ReadVariableOp:
name: "dense/bias/Read/ReadVariableOp"
op: "ReadVariableOp"
input: "dense/bias"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
dense/Tensordot/ReadVariableOp:
name: "dense/Tensordot/ReadVariableOp"
op: "ReadVariableOp"
input: "dense/kernel"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
dense/Tensordot/axes:
name: "dense/Tensordot/axes"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 3
    }
  }
}

----------------------------------------------------------

	
dense/Tensordot/free:
name: "dense/Tensordot/free"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
    }
  }
}

----------------------------------------------------------

	
dense/Tensordot/Shape:
name: "dense/Tensordot/Shape"
op: "Shape"
input: "sequential_4/Relu"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

----------------------------------------------------------

	
dense/Tensordot/GatherV2/axis:
name: "dense/Tensordot/GatherV2/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}

----------------------------------------------------------

	
dense/Tensordot/GatherV2:
name: "dense/Tensordot/GatherV2"
op: "GatherV2"
input: "dense/Tensordot/Shape"
input: "dense/Tensordot/free"
input: "dense/Tensordot/GatherV2/axis"
attr {
  key: "Taxis"
  value {
    type: DT_INT32
  }
}
attr {
  key: "Tindices"
  value {
    type: DT_INT32
  }
}
attr {
  key: "Tparams"
  value {
    type: DT_INT32
  }
}

----------------------------------------------------------

	
dense/Tensordot/GatherV2_1/axis:
name: "dense/Tensordot/GatherV2_1/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}

----------------------------------------------------------

	
dense/Tensordot/GatherV2_1:
name: "dense/Tensordot/GatherV2_1"
op: "GatherV2"
input: "dense/Tensordot/Shape"
input: "dense/Tensordot/axes"
input: "dense/Tensordot/GatherV2_1/axis"
attr {
  key: "Taxis"
  value {
    type: DT_INT32
  }
}
attr {
  key: "Tindices"
  value {
    type: DT_INT32
  }
}
attr {
  key: "Tparams"
  value {
    type: DT_INT32
  }
}

----------------------------------------------------------

	
dense/Tensordot/Const:
name: "dense/Tensordot/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 0
    }
  }
}

----------------------------------------------------------

	
dense/Tensordot/Prod:
name: "dense/Tensordot/Prod"
op: "Prod"
input: "dense/Tensordot/GatherV2"
input: "dense/Tensordot/Const"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

----------------------------------------------------------

	
dense/Tensordot/Const_1:
name: "dense/Tensordot/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 0
    }
  }
}

----------------------------------------------------------

	
dense/Tensordot/Prod_1:
name: "dense/Tensordot/Prod_1"
op: "Prod"
input: "dense/Tensordot/GatherV2_1"
input: "dense/Tensordot/Const_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

----------------------------------------------------------

	
dense/Tensordot/concat/axis:
name: "dense/Tensordot/concat/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}

----------------------------------------------------------

	
dense/Tensordot/concat:
name: "dense/Tensordot/concat"
op: "ConcatV2"
input: "dense/Tensordot/free"
input: "dense/Tensordot/axes"
input: "dense/Tensordot/concat/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}

----------------------------------------------------------

	
dense/Tensordot/stack:
name: "dense/Tensordot/stack"
op: "Pack"
input: "dense/Tensordot/Prod"
input: "dense/Tensordot/Prod_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "axis"
  value {
    i: 0
  }
}

----------------------------------------------------------

	
dense/Tensordot/transpose:
name: "dense/Tensordot/transpose"
op: "Transpose"
input: "sequential_4/Relu"
input: "dense/Tensordot/concat"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}

----------------------------------------------------------

	
dense/Tensordot/Reshape:
name: "dense/Tensordot/Reshape"
op: "Reshape"
input: "dense/Tensordot/transpose"
input: "dense/Tensordot/stack"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

----------------------------------------------------------

	
dense/Tensordot/transpose_1/perm:
name: "dense/Tensordot/transpose_1/perm"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\000\000\000\000\001\000\000\000"
    }
  }
}

----------------------------------------------------------

	
dense/Tensordot/transpose_1:
name: "dense/Tensordot/transpose_1"
op: "Transpose"
input: "dense/Tensordot/ReadVariableOp"
input: "dense/Tensordot/transpose_1/perm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}

----------------------------------------------------------

	
dense/Tensordot/Reshape_1/shape:
name: "dense/Tensordot/Reshape_1/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: " \000\000\000\350\003\000\000"
    }
  }
}

----------------------------------------------------------

	
dense/Tensordot/Reshape_1:
name: "dense/Tensordot/Reshape_1"
op: "Reshape"
input: "dense/Tensordot/transpose_1"
input: "dense/Tensordot/Reshape_1/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

----------------------------------------------------------

	
dense/Tensordot/MatMul:
name: "dense/Tensordot/MatMul"
op: "MatMul"
input: "dense/Tensordot/Reshape"
input: "dense/Tensordot/Reshape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}

----------------------------------------------------------

	
dense/Tensordot/Const_2:
name: "dense/Tensordot/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1000
    }
  }
}

----------------------------------------------------------

	
dense/Tensordot/concat_1/axis:
name: "dense/Tensordot/concat_1/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}

----------------------------------------------------------

	
dense/Tensordot/concat_1:
name: "dense/Tensordot/concat_1"
op: "ConcatV2"
input: "dense/Tensordot/GatherV2"
input: "dense/Tensordot/Const_2"
input: "dense/Tensordot/concat_1/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}

----------------------------------------------------------

	
dense/Tensordot:
name: "dense/Tensordot"
op: "Reshape"
input: "dense/Tensordot/MatMul"
input: "dense/Tensordot/concat_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

----------------------------------------------------------

	
dense/BiasAdd/ReadVariableOp:
name: "dense/BiasAdd/ReadVariableOp"
op: "ReadVariableOp"
input: "dense/bias"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

	
dense/BiasAdd:
name: "dense/BiasAdd"
op: "BiasAdd"
input: "dense/Tensordot"
input: "dense/BiasAdd/ReadVariableOp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

----------------------------------------------------------

	
softmax/Softmax:
name: "softmax/Softmax"
op: "Softmax"
input: "dense/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

----------------------------------------------------------

Parameter:
	sequential_1/conv2d/kernel:0:<tf.Variable 'sequential_1/conv2d/kernel:0' shape=(3, 3, 3, 32) dtype=float32>
	sequential_1/conv2d/bias:0:<tf.Variable 'sequential_1/conv2d/bias:0' shape=(32,) dtype=float32>
	sequential_1/batch_normalization/gamma:0:<tf.Variable 'sequential_1/batch_normalization/gamma:0' shape=(32,) dtype=float32>
	sequential_1/batch_normalization/beta:0:<tf.Variable 'sequential_1/batch_normalization/beta:0' shape=(32,) dtype=float32>
	sequential_1/batch_normalization/moving_mean:0:<tf.Variable 'sequential_1/batch_normalization/moving_mean:0' shape=(32,) dtype=float32>
	sequential_1/batch_normalization/moving_variance:0:<tf.Variable 'sequential_1/batch_normalization/moving_variance:0' shape=(32,) dtype=float32>
	sequential_2/conv2d_1/kernel:0:<tf.Variable 'sequential_2/conv2d_1/kernel:0' shape=(3, 3, 32, 32) dtype=float32>
	sequential_2/conv2d_1/bias:0:<tf.Variable 'sequential_2/conv2d_1/bias:0' shape=(32,) dtype=float32>
	sequential_2/batch_normalization_1/gamma:0:<tf.Variable 'sequential_2/batch_normalization_1/gamma:0' shape=(32,) dtype=float32>
	sequential_2/batch_normalization_1/beta:0:<tf.Variable 'sequential_2/batch_normalization_1/beta:0' shape=(32,) dtype=float32>
	sequential_2/batch_normalization_1/moving_mean:0:<tf.Variable 'sequential_2/batch_normalization_1/moving_mean:0' shape=(32,) dtype=float32>
	sequential_2/batch_normalization_1/moving_variance:0:<tf.Variable 'sequential_2/batch_normalization_1/moving_variance:0' shape=(32,) dtype=float32>
	sequential_3/conv2d_2/kernel:0:<tf.Variable 'sequential_3/conv2d_2/kernel:0' shape=(3, 3, 32, 32) dtype=float32>
	sequential_3/conv2d_2/bias:0:<tf.Variable 'sequential_3/conv2d_2/bias:0' shape=(32,) dtype=float32>
	sequential_3/batch_normalization_2/gamma:0:<tf.Variable 'sequential_3/batch_normalization_2/gamma:0' shape=(32,) dtype=float32>
	sequential_3/batch_normalization_2/beta:0:<tf.Variable 'sequential_3/batch_normalization_2/beta:0' shape=(32,) dtype=float32>
	sequential_3/batch_normalization_2/moving_mean:0:<tf.Variable 'sequential_3/batch_normalization_2/moving_mean:0' shape=(32,) dtype=float32>
	sequential_3/batch_normalization_2/moving_variance:0:<tf.Variable 'sequential_3/batch_normalization_2/moving_variance:0' shape=(32,) dtype=float32>
	sequential_4/conv2d_3/kernel:0:<tf.Variable 'sequential_4/conv2d_3/kernel:0' shape=(3, 3, 32, 32) dtype=float32>
	sequential_4/conv2d_3/bias:0:<tf.Variable 'sequential_4/conv2d_3/bias:0' shape=(32,) dtype=float32>
	sequential_4/batch_normalization_3/gamma:0:<tf.Variable 'sequential_4/batch_normalization_3/gamma:0' shape=(32,) dtype=float32>
	sequential_4/batch_normalization_3/beta:0:<tf.Variable 'sequential_4/batch_normalization_3/beta:0' shape=(32,) dtype=float32>
	sequential_4/batch_normalization_3/moving_mean:0:<tf.Variable 'sequential_4/batch_normalization_3/moving_mean:0' shape=(32,) dtype=float32>
	sequential_4/batch_normalization_3/moving_variance:0:<tf.Variable 'sequential_4/batch_normalization_3/moving_variance:0' shape=(32,) dtype=float32>
	dense/kernel:0:<tf.Variable 'dense/kernel:0' shape=(32, 1000) dtype=float32>
	dense/bias:0:<tf.Variable 'dense/bias:0' shape=(1000,) dtype=float32>

python tf_slim_classification_train.py --train_dir /home/yx-wan/newhome/checkpoint/resnet50_ori/ --save_interval_secs 600 --save_summaries_secs 600 --weight_decay 0.0001 --optimizer rmsprop --learning_rate 0.001 --learning_rate_decay_factor 0.1 --learning_rate_decay_type exponential --num_epochs_per_decay 15 --dataset_dir /home/yx-wan/newhome/imagenet_train --labels_offset 1 --model_name resnet_v1_50 --batch_size 32 --number_epochs 50 --num_clones 1 --end_learning_rate 0.00001



