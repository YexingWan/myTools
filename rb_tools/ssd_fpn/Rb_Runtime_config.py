import os
import numpy as np
from plumber_ir import sg_def_pb2
from google.protobuf import text_format



# the shape of input, BHWC, B must be 1 and C must be 3
IMG_SHAPE = [1,736,1280,3]
# the mean value of RGB
IMG_MEAN = np.array([123.68, 116.78, 103.94],dtype=np.float32)
# weight decay used in training
WEIGHT_DECAY = 1E-5
# scale factor
TEXT_SCALE = 512

# get root of project
# The trained tensorflow checkpoint path
CHECKPOINT_PATH = '.'
# The path of prototxt file (all nodes information) generated by RbCompiler
# PROTOTXT_PATH = os.path.join(ROOT,"Rb_tools/EAST_sg.pbtxt")
# The path of prototxt file with opt
PROTOTXT_PATH = '/nas/BenchmarkData/rainbuilder/tf_sgir_1.4.2_kld/ssd_fpn_gpu/quant/no_pad_channel/ssd_fpn_sim_sg_gpu.pbtxt'
# The path of binary coefficient files generated by RbCompiler
COEFF_DIR = '/nas/BenchmarkData/rainbuilder/tf_sgir_1.4.2_kld/ssd_fpn_gpu/quant/no_pad_channel/ssd_fpn_quant_coeff/coeff_little'
# The directory of images should be inferred
INFER_IMG_DIR = '/root/newhome/workspace/cr-test-image'
# the output directory of inferred image
OUTPUT_DIR = '.'


# get node name by op: Conv2d

sg_def = sg_def_pb2.SGDef()
with open(PROTOTXT_PATH,'r') as f:
    text_format.Merge(f.read(),sg_def)

conv_nodes_name = []
activation_nodes_name = []
for node in sg_def.node:
    if node.op == "Conv2D" or node.op == 'TypeCast':
        conv_nodes_name.append(node.name)


OUTPUT_NODE_LIST=conv_nodes_name


